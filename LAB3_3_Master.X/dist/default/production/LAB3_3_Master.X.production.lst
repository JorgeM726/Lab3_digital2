

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 04 20:43:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377     0008                     _PORTDbits	set	8
   378     0013                     _SSPBUF	set	19
   379     0014                     _SSPCON	set	20
   380     0008                     _PORTD	set	8
   381     0006                     _PORTB	set	6
   382     0007                     _PORTCbits	set	7
   383     0043                     _RD3	set	67
   384     0047                     _RD7	set	71
   385     0046                     _RD6	set	70
   386     0045                     _RD5	set	69
   387     0044                     _RD4	set	68
   388     0094                     _SSPSTATbits	set	148
   389     0094                     _SSPSTAT	set	148
   390     0088                     _TRISD	set	136
   391     0086                     _TRISB	set	134
   392     008F                     _OSCCONbits	set	143
   393     043B                     _TRISC3	set	1083
   394     043D                     _TRISC5	set	1085
   395     0439                     _TRISC1	set	1081
   396     043A                     _TRISC2	set	1082
   397     0189                     _ANSELH	set	393
   398     0188                     _ANSEL	set	392
   399                           
   400                           	psect	strings
   401     0003                     __pstrings:
   402     0003                     stringtab:
   403     0003                     __stringtab:
   404                           
   405                           ;	String table - string pointers are 1 byte each
   406     0003  1BFF               	btfsc	btemp+1,7
   407     0004  280D               	ljmp	stringcode
   408     0005  1383               	bcf	3,7
   409     0006  187F               	btfsc	btemp+1,0
   410     0007  1783               	bsf	3,7
   411     0008  0800               	movf	0,w
   412     0009  0A84               	incf	4,f
   413     000A  1903               	skipnz
   414     000B  0AFF               	incf	btemp+1,f
   415     000C  0008               	return
   416     000D                     stringcode:
   417     000D                     stringdir:
   418     000D  3000               	movlw	high stringdir
   419     000E  008A               	movwf	10
   420     000F  0804               	movf	4,w
   421     0010  0A84               	incf	4,f
   422     0011  0782               	addwf	2,f
   423     0012                     __stringbase:
   424     0012  3400               	retlw	0
   425     0013                     __end_of__stringtab:
   426     0013                     STR_1:
   427     0013  3420               	retlw	32	;' '
   428     0014  3420               	retlw	32	;' '
   429     0015  3420               	retlw	32	;' '
   430     0016  3400               	retlw	0
   431     0017                     STR_4:
   432     0017  3453               	retlw	83	;'S'
   433     0018  3431               	retlw	49	;'1'
   434     0019  343A               	retlw	58	;':'
   435     001A  3400               	retlw	0
   436     001B                     STR_5:
   437     001B  3453               	retlw	83	;'S'
   438     001C  3432               	retlw	50	;'2'
   439     001D  343A               	retlw	58	;':'
   440     001E  3400               	retlw	0
   441     001F                     STR_6:
   442     001F  3453               	retlw	83	;'S'
   443     0020  3433               	retlw	51	;'3'
   444     0021  343A               	retlw	58	;':'
   445     0022  3400               	retlw	0
   446     0013                     
   447                           	psect	cinit
   448     07EB                     start_initialization:	
   449                           ; #config settings
   450                           
   451     07EB                     __initialization:
   452                           
   453                           ; Clear objects allocated to COMMON
   454     07EB  01FD               	clrf	__pbssCOMMON& (0+127)
   455                           
   456                           ; Clear objects allocated to BANK0
   457     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   458     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   459     07EE  01A0               	clrf	__pbssBANK0& (0+127)
   460     07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   461     07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   462     07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   463     07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   464     07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   465     07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   466     07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   467     07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   468     07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   469     07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   470     07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   471     07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   472     07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   473     07FC                     end_of_initialization:	
   474                           ;End of C runtime variable initialization code
   475                           
   476     07FC                     __end_of__initialization:
   477     07FC  0183               	clrf	3
   478     07FD  120A  118A  2EA8   	ljmp	_main	;jump to C main() function
   479                           
   480                           	psect	bssCOMMON
   481     007D                     __pbssCOMMON:
   482     007D                     _slave1:
   483     007D                     	ds	1
   484                           
   485                           	psect	bssBANK0
   486     0020                     __pbssBANK0:
   487     0020                     _slave2:
   488     0020                     	ds	1
   489     0021                     _slave1_cont:
   490     0021                     	ds	1
   491     0022                     _buffer3:
   492     0022                     	ds	4
   493     0026                     _buffer2:
   494     0026                     	ds	4
   495     002A                     _buffer:
   496     002A                     	ds	4
   497                           
   498                           	psect	cstackCOMMON
   499     0070                     __pcstackCOMMON:
   500     0070                     ?_setup:
   501     0070                     ?_spiWrite:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ??_spiWrite:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_spiRead:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ??_spiRead:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_spiInit:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_Lcd_Init:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_Lcd_Clear:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_main:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_spiReceiveWait:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ??_spiReceiveWait:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_Lcd_Port:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ??_Lcd_Port:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_Lcd_Cmd:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_Lcd_Write_Char:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?___awdiv:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?___awmod:	
   547                           ; 2 bytes @ 0x0
   548                           
   549     0070                     spiInit@sDataSample:	
   550                           ; 2 bytes @ 0x0
   551                           
   552     0070                     spiWrite@dat:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     Lcd_Port@a:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ___awdiv@divisor:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ___awmod@divisor:	
   562                           ; 2 bytes @ 0x0
   563                           
   564                           
   565                           ; 2 bytes @ 0x0
   566     0070                     	ds	1
   567     0071                     ??_Lcd_Cmd:
   568     0071                     ??_Lcd_Write_Char:	
   569                           ; 1 bytes @ 0x1
   570                           
   571     0071                     spiInit@sClockIdle:	
   572                           ; 1 bytes @ 0x1
   573                           
   574                           
   575                           ; 1 bytes @ 0x1
   576     0071                     	ds	1
   577     0072                     spiInit@sTransmitEdge:
   578     0072                     Lcd_Write_Char@temp:	
   579                           ; 1 bytes @ 0x2
   580                           
   581     0072                     ___awdiv@dividend:	
   582                           ; 1 bytes @ 0x2
   583                           
   584     0072                     ___awmod@dividend:	
   585                           ; 2 bytes @ 0x2
   586                           
   587                           
   588                           ; 2 bytes @ 0x2
   589     0072                     	ds	1
   590     0073                     ??_spiInit:
   591     0073                     spiInit@sType:	
   592                           ; 1 bytes @ 0x3
   593                           
   594     0073                     Lcd_Cmd@a:	
   595                           ; 1 bytes @ 0x3
   596                           
   597     0073                     Lcd_Write_Char@y:	
   598                           ; 1 bytes @ 0x3
   599                           
   600                           
   601                           ; 1 bytes @ 0x3
   602     0073                     	ds	1
   603     0074                     ?_Lcd_Set_Cursor:
   604     0074                     ??_Lcd_Init:	
   605                           ; 1 bytes @ 0x4
   606                           
   607     0074                     ??_Lcd_Clear:	
   608                           ; 1 bytes @ 0x4
   609                           
   610     0074                     ??___awdiv:	
   611                           ; 1 bytes @ 0x4
   612                           
   613     0074                     ??___awmod:	
   614                           ; 1 bytes @ 0x4
   615                           
   616     0074                     Lcd_Set_Cursor@b:	
   617                           ; 1 bytes @ 0x4
   618                           
   619     0074                     Lcd_Write_Char@a:	
   620                           ; 1 bytes @ 0x4
   621                           
   622                           
   623                           ; 1 bytes @ 0x4
   624     0074                     	ds	1
   625     0075                     ??_Lcd_Set_Cursor:
   626     0075                     ?_Lcd_Write_String:	
   627                           ; 1 bytes @ 0x5
   628                           
   629     0075                     ___awdiv@counter:	
   630                           ; 1 bytes @ 0x5
   631                           
   632     0075                     ___awmod@counter:	
   633                           ; 1 bytes @ 0x5
   634                           
   635     0075                     Lcd_Write_String@a:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 2 bytes @ 0x5
   640     0075                     	ds	1
   641     0076                     Lcd_Set_Cursor@a:
   642     0076                     ___awdiv@sign:	
   643                           ; 1 bytes @ 0x6
   644                           
   645     0076                     ___awmod@sign:	
   646                           ; 1 bytes @ 0x6
   647                           
   648                           
   649                           ; 1 bytes @ 0x6
   650     0076                     	ds	1
   651     0077                     ??_Lcd_Write_String:
   652     0077                     Lcd_Set_Cursor@z:	
   653                           ; 1 bytes @ 0x7
   654                           
   655     0077                     ___awdiv@quotient:	
   656                           ; 1 bytes @ 0x7
   657                           
   658                           
   659                           ; 2 bytes @ 0x7
   660     0077                     	ds	1
   661     0078                     Lcd_Set_Cursor@y:
   662                           
   663                           ; 1 bytes @ 0x8
   664     0078                     	ds	1
   665     0079                     ?_uint8ToString:
   666     0079                     uint8ToString@str:	
   667                           ; 1 bytes @ 0x9
   668                           
   669     0079                     Lcd_Set_Cursor@temp:	
   670                           ; 1 bytes @ 0x9
   671                           
   672                           
   673                           ; 1 bytes @ 0x9
   674     0079                     	ds	1
   675     007A                     ??_uint8ToString:
   676     007A                     Lcd_Write_String@i:	
   677                           ; 1 bytes @ 0xA
   678                           
   679                           
   680                           ; 2 bytes @ 0xA
   681     007A                     	ds	2
   682     007C                     ??_setup:
   683                           
   684                           ; 1 bytes @ 0xC
   685     007C                     	ds	1
   686                           
   687                           	psect	cstackBANK0
   688     002E                     __pcstackBANK0:
   689     002E                     uint8ToString@num:
   690                           
   691                           ; 1 bytes @ 0x0
   692     002E                     	ds	1
   693     002F                     uint8ToString@tempChar:
   694                           
   695                           ; 1 bytes @ 0x1
   696     002F                     	ds	1
   697     0030                     uint8ToString@i:
   698                           
   699                           ; 1 bytes @ 0x2
   700     0030                     	ds	1
   701     0031                     uint8ToString@left:
   702                           
   703                           ; 1 bytes @ 0x3
   704     0031                     	ds	1
   705     0032                     uint8ToString@right:
   706                           
   707                           ; 1 bytes @ 0x4
   708     0032                     	ds	1
   709     0033                     uint8ToString@temp:
   710                           
   711                           ; 1 bytes @ 0x5
   712     0033                     	ds	1
   713     0034                     ??_main:
   714                           
   715                           ; 1 bytes @ 0x6
   716     0034                     	ds	3
   717                           
   718                           	psect	maintext
   719     06A8                     __pmaintext:	
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 60 in file "Lab3_MAster.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : B00/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       3       0       0       0
   742 ;;      Totals:         0       3       0       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels required when called: 4
   745 ;; This function calls:
   746 ;;		_Lcd_Set_Cursor
   747 ;;		_Lcd_Write_String
   748 ;;		_setup
   749 ;;		_spiRead
   750 ;;		_spiWrite
   751 ;;		_uint8ToString
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     06A8                     _main:	
   758                           ;psect for function _main
   759                           
   760     06A8                     l1329:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;Lab3_MAster.c: 61:     setup();
   766     06A8  120A  118A  2501  120A  118A  	fcall	_setup
   767     06AD                     l1331:
   768                           
   769                           ;Lab3_MAster.c: 67:        PORTCbits.RC2 = 0;
   770     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   771     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   772     06AF  1107               	bcf	7,2	;volatile
   773     06B0                     l1333:
   774                           
   775                           ;Lab3_MAster.c: 68:        _delay((unsigned long)((1)*(8000000/4000.0)));
   776     06B0  3003               	movlw	3
   777     06B1  1283               	bcf	3,5	;RP0=0, select bank0
   778     06B2  1303               	bcf	3,6	;RP1=0, select bank0
   779     06B3  00B5               	movwf	??_main+1
   780     06B4  3097               	movlw	151
   781     06B5  00B4               	movwf	??_main
   782     06B6                     u797:
   783     06B6  0BB4               	decfsz	??_main,f
   784     06B7  2EB6               	goto	u797
   785     06B8  0BB5               	decfsz	??_main+1,f
   786     06B9  2EB6               	goto	u797
   787     06BA                     l1335:
   788                           
   789                           ;Lab3_MAster.c: 69:        spiWrite(1);
   790     06BA  3001               	movlw	1
   791     06BB  120A  118A  2376  120A  118A  	fcall	_spiWrite
   792     06C0                     l1337:
   793                           
   794                           ;Lab3_MAster.c: 70:        slave1 = spiRead();
   795     06C0  120A  118A  2383  120A  118A  	fcall	_spiRead
   796     06C5  00FD               	movwf	_slave1
   797     06C6                     l1339:
   798                           
   799                           ;Lab3_MAster.c: 71:        _delay((unsigned long)((1)*(8000000/4000.0)));
   800     06C6  3003               	movlw	3
   801     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   802     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   803     06C9  00B5               	movwf	??_main+1
   804     06CA  3097               	movlw	151
   805     06CB  00B4               	movwf	??_main
   806     06CC                     u807:
   807     06CC  0BB4               	decfsz	??_main,f
   808     06CD  2ECC               	goto	u807
   809     06CE  0BB5               	decfsz	??_main+1,f
   810     06CF  2ECC               	goto	u807
   811     06D0                     l1341:
   812                           
   813                           ;Lab3_MAster.c: 72:        PORTCbits.RC2 = 1;
   814     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   815     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   816     06D2  1507               	bsf	7,2	;volatile
   817     06D3                     l1343:
   818                           
   819                           ;Lab3_MAster.c: 74:        _delay((unsigned long)((250)*(8000000/4000.0)));
   820     06D3  3003               	movlw	3
   821     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   822     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   823     06D6  00B6               	movwf	??_main+2
   824     06D7  308A               	movlw	138
   825     06D8  00B5               	movwf	??_main+1
   826     06D9  3055               	movlw	85
   827     06DA  00B4               	movwf	??_main
   828     06DB                     u817:
   829     06DB  0BB4               	decfsz	??_main,f
   830     06DC  2EDB               	goto	u817
   831     06DD  0BB5               	decfsz	??_main+1,f
   832     06DE  2EDB               	goto	u817
   833     06DF  0BB6               	decfsz	??_main+2,f
   834     06E0  2EDB               	goto	u817
   835     06E1                     l1345:
   836                           
   837                           ;Lab3_MAster.c: 80:        PORTCbits.RC1 = 0;
   838     06E1  1283               	bcf	3,5	;RP0=0, select bank0
   839     06E2  1303               	bcf	3,6	;RP1=0, select bank0
   840     06E3  1087               	bcf	7,1	;volatile
   841     06E4                     l1347:
   842                           
   843                           ;Lab3_MAster.c: 81:        _delay((unsigned long)((1)*(8000000/4000.0)));
   844     06E4  3003               	movlw	3
   845     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   846     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   847     06E7  00B5               	movwf	??_main+1
   848     06E8  3097               	movlw	151
   849     06E9  00B4               	movwf	??_main
   850     06EA                     u827:
   851     06EA  0BB4               	decfsz	??_main,f
   852     06EB  2EEA               	goto	u827
   853     06EC  0BB5               	decfsz	??_main+1,f
   854     06ED  2EEA               	goto	u827
   855     06EE                     l1349:
   856                           
   857                           ;Lab3_MAster.c: 82:        spiWrite(PORTB);
   858     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   859     06EF  1303               	bcf	3,6	;RP1=0, select bank0
   860     06F0  0806               	movf	6,w	;volatile
   861     06F1  120A  118A  2376  120A  118A  	fcall	_spiWrite
   862     06F6                     l1351:
   863                           
   864                           ;Lab3_MAster.c: 83:        slave2 = spiRead();
   865     06F6  120A  118A  2383  120A  118A  	fcall	_spiRead
   866     06FB  1283               	bcf	3,5	;RP0=0, select bank0
   867     06FC  1303               	bcf	3,6	;RP1=0, select bank0
   868     06FD  00A0               	movwf	_slave2
   869     06FE                     l1353:
   870                           
   871                           ;Lab3_MAster.c: 84:        _delay((unsigned long)((1)*(8000000/4000.0)));
   872     06FE  3003               	movlw	3
   873     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   874     0700  1303               	bcf	3,6	;RP1=0, select bank0
   875     0701  00B5               	movwf	??_main+1
   876     0702  3097               	movlw	151
   877     0703  00B4               	movwf	??_main
   878     0704                     u837:
   879     0704  0BB4               	decfsz	??_main,f
   880     0705  2F04               	goto	u837
   881     0706  0BB5               	decfsz	??_main+1,f
   882     0707  2F04               	goto	u837
   883     0708                     l1355:
   884                           
   885                           ;Lab3_MAster.c: 85:        PORTCbits.RC1 = 1;
   886     0708  1283               	bcf	3,5	;RP0=0, select bank0
   887     0709  1303               	bcf	3,6	;RP1=0, select bank0
   888     070A  1487               	bsf	7,1	;volatile
   889     070B                     l1357:
   890                           
   891                           ;Lab3_MAster.c: 87:        _delay((unsigned long)((250)*(8000000/4000.0)));
   892     070B  3003               	movlw	3
   893     070C  1283               	bcf	3,5	;RP0=0, select bank0
   894     070D  1303               	bcf	3,6	;RP1=0, select bank0
   895     070E  00B6               	movwf	??_main+2
   896     070F  308A               	movlw	138
   897     0710  00B5               	movwf	??_main+1
   898     0711  3055               	movlw	85
   899     0712  00B4               	movwf	??_main
   900     0713                     u847:
   901     0713  0BB4               	decfsz	??_main,f
   902     0714  2F13               	goto	u847
   903     0715  0BB5               	decfsz	??_main+1,f
   904     0716  2F13               	goto	u847
   905     0717  0BB6               	decfsz	??_main+2,f
   906     0718  2F13               	goto	u847
   907     0719                     l1359:
   908                           
   909                           ;Lab3_MAster.c: 89:        PORTCbits.RC2 = 0;
   910     0719  1283               	bcf	3,5	;RP0=0, select bank0
   911     071A  1303               	bcf	3,6	;RP1=0, select bank0
   912     071B  1107               	bcf	7,2	;volatile
   913     071C                     l1361:
   914                           
   915                           ;Lab3_MAster.c: 90:        _delay((unsigned long)((1)*(8000000/4000.0)));
   916     071C  3003               	movlw	3
   917     071D  1283               	bcf	3,5	;RP0=0, select bank0
   918     071E  1303               	bcf	3,6	;RP1=0, select bank0
   919     071F  00B5               	movwf	??_main+1
   920     0720  3097               	movlw	151
   921     0721  00B4               	movwf	??_main
   922     0722                     u857:
   923     0722  0BB4               	decfsz	??_main,f
   924     0723  2F22               	goto	u857
   925     0724  0BB5               	decfsz	??_main+1,f
   926     0725  2F22               	goto	u857
   927     0726                     l1363:
   928                           
   929                           ;Lab3_MAster.c: 91:        spiWrite(0);
   930     0726  3000               	movlw	0
   931     0727  120A  118A  2376  120A  118A  	fcall	_spiWrite
   932     072C                     l1365:
   933                           
   934                           ;Lab3_MAster.c: 92:        slave1_cont = spiRead();
   935     072C  120A  118A  2383  120A  118A  	fcall	_spiRead
   936     0731  1283               	bcf	3,5	;RP0=0, select bank0
   937     0732  1303               	bcf	3,6	;RP1=0, select bank0
   938     0733  00A1               	movwf	_slave1_cont
   939     0734                     l1367:
   940                           
   941                           ;Lab3_MAster.c: 93:        _delay((unsigned long)((1)*(8000000/4000.0)));
   942     0734  3003               	movlw	3
   943     0735  1283               	bcf	3,5	;RP0=0, select bank0
   944     0736  1303               	bcf	3,6	;RP1=0, select bank0
   945     0737  00B5               	movwf	??_main+1
   946     0738  3097               	movlw	151
   947     0739  00B4               	movwf	??_main
   948     073A                     u867:
   949     073A  0BB4               	decfsz	??_main,f
   950     073B  2F3A               	goto	u867
   951     073C  0BB5               	decfsz	??_main+1,f
   952     073D  2F3A               	goto	u867
   953     073E                     l1369:
   954                           
   955                           ;Lab3_MAster.c: 94:        PORTCbits.RC2 = 1;
   956     073E  1283               	bcf	3,5	;RP0=0, select bank0
   957     073F  1303               	bcf	3,6	;RP1=0, select bank0
   958     0740  1507               	bsf	7,2	;volatile
   959     0741                     l1371:
   960                           
   961                           ;Lab3_MAster.c: 96:        _delay((unsigned long)((250)*(8000000/4000.0)));
   962     0741  3003               	movlw	3
   963     0742  1283               	bcf	3,5	;RP0=0, select bank0
   964     0743  1303               	bcf	3,6	;RP1=0, select bank0
   965     0744  00B6               	movwf	??_main+2
   966     0745  308A               	movlw	138
   967     0746  00B5               	movwf	??_main+1
   968     0747  3055               	movlw	85
   969     0748  00B4               	movwf	??_main
   970     0749                     u877:
   971     0749  0BB4               	decfsz	??_main,f
   972     074A  2F49               	goto	u877
   973     074B  0BB5               	decfsz	??_main+1,f
   974     074C  2F49               	goto	u877
   975     074D  0BB6               	decfsz	??_main+2,f
   976     074E  2F49               	goto	u877
   977     074F                     l1373:
   978                           
   979                           ;Lab3_MAster.c: 99:        uint8ToString(slave1,buffer);
   980     074F  302A               	movlw	(low (_buffer| 0))& (0+255)
   981     0750  00F9               	movwf	uint8ToString@str
   982     0751  087D               	movf	_slave1,w
   983     0752  120A  118A  2621  120A  118A  	fcall	_uint8ToString
   984     0757                     l1375:
   985                           
   986                           ;Lab3_MAster.c: 101:        if (slave1<100){
   987     0757  3064               	movlw	100
   988     0758  027D               	subwf	_slave1,w
   989     0759  1803               	skipnc
   990     075A  2F5C               	goto	u761
   991     075B  2F5D               	goto	u760
   992     075C                     u761:
   993     075C  2F6E               	goto	l1381
   994     075D                     u760:
   995     075D                     l1377:
   996                           
   997                           ;Lab3_MAster.c: 102:            Lcd_Set_Cursor(2,1);
   998     075D  01F4               	clrf	Lcd_Set_Cursor@b
   999     075E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1000     075F  3002               	movlw	2
  1001     0760  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1002     0765                     l1379:
  1003                           
  1004                           ;Lab3_MAster.c: 103:            Lcd_Write_String("   ");
  1005     0765  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1006     0766  00F5               	movwf	Lcd_Write_String@a
  1007     0767  3080               	movlw	128
  1008     0768  00F6               	movwf	Lcd_Write_String@a+1
  1009     0769  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1010     076E                     l1381:
  1011                           
  1012                           ;Lab3_MAster.c: 105:        Lcd_Set_Cursor(2,1);
  1013     076E  01F4               	clrf	Lcd_Set_Cursor@b
  1014     076F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1015     0770  3002               	movlw	2
  1016     0771  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1017                           
  1018                           ;Lab3_MAster.c: 106:        Lcd_Write_String(buffer);
  1019     0776  302A               	movlw	(low (_buffer| 0))& (0+255)
  1020     0777  00F5               	movwf	Lcd_Write_String@a
  1021     0778  3000               	movlw	0
  1022     0779  00F6               	movwf	Lcd_Write_String@a+1
  1023     077A  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1024     077F                     l1383:
  1025                           
  1026                           ;Lab3_MAster.c: 110:         uint8ToString(slave2,buffer2);
  1027     077F  3026               	movlw	(low (_buffer2| 0))& (0+255)
  1028     0780  00F9               	movwf	uint8ToString@str
  1029     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0783  0820               	movf	_slave2,w
  1032     0784  120A  118A  2621  120A  118A  	fcall	_uint8ToString
  1033     0789                     l1385:
  1034                           
  1035                           ;Lab3_MAster.c: 112:        if (slave2<100){
  1036     0789  3064               	movlw	100
  1037     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1038     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1039     078C  0220               	subwf	_slave2,w
  1040     078D  1803               	skipnc
  1041     078E  2F90               	goto	u771
  1042     078F  2F91               	goto	u770
  1043     0790                     u771:
  1044     0790  2FA2               	goto	l1391
  1045     0791                     u770:
  1046     0791                     l1387:
  1047                           
  1048                           ;Lab3_MAster.c: 113:            Lcd_Set_Cursor(2,8);
  1049     0791  3008               	movlw	8
  1050     0792  00F4               	movwf	Lcd_Set_Cursor@b
  1051     0793  3002               	movlw	2
  1052     0794  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1053     0799                     l1389:
  1054                           
  1055                           ;Lab3_MAster.c: 114:            Lcd_Write_String("   ");
  1056     0799  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1057     079A  00F5               	movwf	Lcd_Write_String@a
  1058     079B  3080               	movlw	128
  1059     079C  00F6               	movwf	Lcd_Write_String@a+1
  1060     079D  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1061     07A2                     l1391:
  1062                           
  1063                           ;Lab3_MAster.c: 116:        Lcd_Set_Cursor(2,8);
  1064     07A2  3008               	movlw	8
  1065     07A3  00F4               	movwf	Lcd_Set_Cursor@b
  1066     07A4  3002               	movlw	2
  1067     07A5  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1068                           
  1069                           ;Lab3_MAster.c: 117:        Lcd_Write_String(buffer2);
  1070     07AA  3026               	movlw	(low (_buffer2| 0))& (0+255)
  1071     07AB  00F5               	movwf	Lcd_Write_String@a
  1072     07AC  3000               	movlw	0
  1073     07AD  00F6               	movwf	Lcd_Write_String@a+1
  1074     07AE  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1075     07B3                     l1393:
  1076                           
  1077                           ;Lab3_MAster.c: 121:        uint8ToString(slave1_cont,buffer3);
  1078     07B3  3022               	movlw	(low (_buffer3| 0))& (0+255)
  1079     07B4  00F9               	movwf	uint8ToString@str
  1080     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1081     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1082     07B7  0821               	movf	_slave1_cont,w
  1083     07B8  120A  118A  2621  120A  118A  	fcall	_uint8ToString
  1084     07BD                     l1395:
  1085                           
  1086                           ;Lab3_MAster.c: 123:        if (slave1_cont<100){
  1087     07BD  3064               	movlw	100
  1088     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1089     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1090     07C0  0221               	subwf	_slave1_cont,w
  1091     07C1  1803               	skipnc
  1092     07C2  2FC4               	goto	u781
  1093     07C3  2FC5               	goto	u780
  1094     07C4                     u781:
  1095     07C4  2FD6               	goto	l1401
  1096     07C5                     u780:
  1097     07C5                     l1397:
  1098                           
  1099                           ;Lab3_MAster.c: 124:            Lcd_Set_Cursor(2,14);
  1100     07C5  300E               	movlw	14
  1101     07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1102     07C7  3002               	movlw	2
  1103     07C8  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1104     07CD                     l1399:
  1105                           
  1106                           ;Lab3_MAster.c: 125:            Lcd_Write_String("   ");
  1107     07CD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1108     07CE  00F5               	movwf	Lcd_Write_String@a
  1109     07CF  3080               	movlw	128
  1110     07D0  00F6               	movwf	Lcd_Write_String@a+1
  1111     07D1  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1112     07D6                     l1401:
  1113                           
  1114                           ;Lab3_MAster.c: 127:        Lcd_Set_Cursor(2,14);
  1115     07D6  300E               	movlw	14
  1116     07D7  00F4               	movwf	Lcd_Set_Cursor@b
  1117     07D8  3002               	movlw	2
  1118     07D9  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1119                           
  1120                           ;Lab3_MAster.c: 128:        Lcd_Write_String(buffer3);
  1121     07DE  3022               	movlw	(low (_buffer3| 0))& (0+255)
  1122     07DF  00F5               	movwf	Lcd_Write_String@a
  1123     07E0  3000               	movlw	0
  1124     07E1  00F6               	movwf	Lcd_Write_String@a+1
  1125     07E2  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1126     07E7  2EAD               	goto	l1331
  1127     07E8  120A  118A  2800   	ljmp	start
  1128     07EB                     __end_of_main:
  1129                           
  1130                           	psect	text1
  1131     0621                     __ptext1:	
  1132 ;; *************** function _uint8ToString *****************
  1133 ;; Defined at:
  1134 ;;		line 163 in file "Lab3_MAster.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  num             1    wreg     unsigned char 
  1137 ;;  str             1    9[COMMON] PTR unsigned char 
  1138 ;;		 -> buffer3(4), buffer2(4), buffer(4), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  num             1    0[BANK0 ] unsigned char 
  1141 ;;  tempChar        1    1[BANK0 ] unsigned char 
  1142 ;;  temp            1    5[BANK0 ] unsigned char 
  1143 ;;  right           1    4[BANK0 ] char 
  1144 ;;  left            1    3[BANK0 ] char 
  1145 ;;  i               1    2[BANK0 ] char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         1       0       0       0       0
  1156 ;;      Locals:         0       6       0       0       0
  1157 ;;      Temps:          3       0       0       0       0
  1158 ;;      Totals:         4       6       0       0       0
  1159 ;;Total ram usage:       10 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 1
  1162 ;; This function calls:
  1163 ;;		___awdiv
  1164 ;;		___awmod
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170     0621                     _uint8ToString:	
  1171                           ;psect for function _uint8ToString
  1172                           
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _uint8ToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1176                           ;uint8ToString@num stored from wreg
  1177     0621  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0622  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0623  00AE               	movwf	uint8ToString@num
  1180     0624                     l1295:
  1181                           
  1182                           ;Lab3_MAster.c: 164:     uint8_t temp = num;
  1183     0624  082E               	movf	uint8ToString@num,w
  1184     0625  00B3               	movwf	uint8ToString@temp
  1185     0626                     l1297:
  1186                           
  1187                           ;Lab3_MAster.c: 165:     int8_t i = 0;
  1188     0626  01B0               	clrf	uint8ToString@i
  1189     0627                     l1299:
  1190                           
  1191                           ;Lab3_MAster.c: 168:     if (temp == 0) {
  1192     0627  0833               	movf	uint8ToString@temp,w
  1193     0628  1D03               	btfss	3,2
  1194     0629  2E2B               	goto	u731
  1195     062A  2E2C               	goto	u730
  1196     062B                     u731:
  1197     062B  2E68               	goto	l1313
  1198     062C                     u730:
  1199     062C                     l1301:
  1200                           
  1201                           ;Lab3_MAster.c: 169:         str[0] = '0';
  1202     062C  0879               	movf	uint8ToString@str,w
  1203     062D  0084               	movwf	4
  1204     062E  3030               	movlw	48
  1205     062F  1383               	bcf	3,7	;select IRP bank0
  1206     0630  0080               	movwf	0
  1207     0631                     l1303:
  1208                           
  1209                           ;Lab3_MAster.c: 170:         str[1] = '\0';
  1210     0631  0A79               	incf	uint8ToString@str,w
  1211     0632  0084               	movwf	4
  1212     0633  0180               	clrf	0
  1213     0634  2EA7               	goto	l70
  1214     0635                     l1307:
  1215                           
  1216                           ;Lab3_MAster.c: 176:         str[i++] = '0' + (temp % 10);
  1217     0635  0830               	movf	uint8ToString@i,w
  1218     0636  0779               	addwf	uint8ToString@str,w
  1219     0637  00FA               	movwf	??_uint8ToString
  1220     0638  087A               	movf	??_uint8ToString,w
  1221     0639  0084               	movwf	4
  1222     063A  300A               	movlw	10
  1223     063B  00F0               	movwf	___awmod@divisor
  1224     063C  3000               	movlw	0
  1225     063D  00F1               	movwf	___awmod@divisor+1
  1226     063E  0833               	movf	uint8ToString@temp,w
  1227     063F  00FB               	movwf	??_uint8ToString+1
  1228     0640  01FC               	clrf	??_uint8ToString+2
  1229     0641  087B               	movf	??_uint8ToString+1,w
  1230     0642  00F2               	movwf	___awmod@dividend
  1231     0643  087C               	movf	??_uint8ToString+2,w
  1232     0644  00F3               	movwf	___awmod@dividend+1
  1233     0645  120A  118A  24A8  120A  118A  	fcall	___awmod
  1234     064A  0870               	movf	?___awmod,w
  1235     064B  3E30               	addlw	48
  1236     064C  1383               	bcf	3,7	;select IRP bank0
  1237     064D  0080               	movwf	0
  1238     064E                     l1309:
  1239     064E  3001               	movlw	1
  1240     064F  00FA               	movwf	??_uint8ToString
  1241     0650  087A               	movf	??_uint8ToString,w
  1242     0651  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0652  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0653  07B0               	addwf	uint8ToString@i,f
  1245     0654                     l1311:
  1246                           
  1247                           ;Lab3_MAster.c: 177:         temp /= 10;
  1248     0654  300A               	movlw	10
  1249     0655  00F0               	movwf	___awdiv@divisor
  1250     0656  3000               	movlw	0
  1251     0657  00F1               	movwf	___awdiv@divisor+1
  1252     0658  0833               	movf	uint8ToString@temp,w
  1253     0659  00FA               	movwf	??_uint8ToString
  1254     065A  01FB               	clrf	??_uint8ToString+1
  1255     065B  087A               	movf	??_uint8ToString,w
  1256     065C  00F2               	movwf	___awdiv@dividend
  1257     065D  087B               	movf	??_uint8ToString+1,w
  1258     065E  00F3               	movwf	___awdiv@dividend+1
  1259     065F  120A  118A  25BA  120A  118A  	fcall	___awdiv
  1260     0664  0870               	movf	?___awdiv,w
  1261     0665  1283               	bcf	3,5	;RP0=0, select bank0
  1262     0666  1303               	bcf	3,6	;RP1=0, select bank0
  1263     0667  00B3               	movwf	uint8ToString@temp
  1264     0668                     l1313:
  1265                           
  1266                           ;Lab3_MAster.c: 175:     while (temp > 0) {
  1267     0668  0833               	movf	uint8ToString@temp,w
  1268     0669  1D03               	btfss	3,2
  1269     066A  2E6C               	goto	u741
  1270     066B  2E6D               	goto	u740
  1271     066C                     u741:
  1272     066C  2E35               	goto	l1307
  1273     066D                     u740:
  1274     066D                     l1315:
  1275                           
  1276                           ;Lab3_MAster.c: 181:     str[i] = '\0';
  1277     066D  0830               	movf	uint8ToString@i,w
  1278     066E  0779               	addwf	uint8ToString@str,w
  1279     066F  00FA               	movwf	??_uint8ToString
  1280     0670  087A               	movf	??_uint8ToString,w
  1281     0671  0084               	movwf	4
  1282     0672  1383               	bcf	3,7	;select IRP bank0
  1283     0673  0180               	clrf	0
  1284     0674                     l1317:
  1285                           
  1286                           ;Lab3_MAster.c: 184:     int8_t left = 0;
  1287     0674  01B1               	clrf	uint8ToString@left
  1288     0675                     l1319:
  1289                           
  1290                           ;Lab3_MAster.c: 185:     int8_t right = i - 1;
  1291     0675  0830               	movf	uint8ToString@i,w
  1292     0676  3EFF               	addlw	-1
  1293     0677  00B2               	movwf	uint8ToString@right
  1294                           
  1295                           ;Lab3_MAster.c: 186:     while (left < right) {
  1296     0678  2E9D               	goto	l1327
  1297     0679                     l1321:
  1298                           
  1299                           ;Lab3_MAster.c: 187:         char tempChar = str[left];
  1300     0679  0831               	movf	uint8ToString@left,w
  1301     067A  0779               	addwf	uint8ToString@str,w
  1302     067B  00FA               	movwf	??_uint8ToString
  1303     067C  087A               	movf	??_uint8ToString,w
  1304     067D  0084               	movwf	4
  1305     067E  0800               	movf	0,w
  1306     067F  00AF               	movwf	uint8ToString@tempChar
  1307                           
  1308                           ;Lab3_MAster.c: 188:         str[left] = str[right];
  1309     0680  0832               	movf	uint8ToString@right,w
  1310     0681  0779               	addwf	uint8ToString@str,w
  1311     0682  00FA               	movwf	??_uint8ToString
  1312     0683  087A               	movf	??_uint8ToString,w
  1313     0684  0084               	movwf	4
  1314     0685  0800               	movf	0,w
  1315     0686  00FB               	movwf	??_uint8ToString+1
  1316     0687  0831               	movf	uint8ToString@left,w
  1317     0688  0779               	addwf	uint8ToString@str,w
  1318     0689  00FC               	movwf	??_uint8ToString+2
  1319     068A  087C               	movf	??_uint8ToString+2,w
  1320     068B  0084               	movwf	4
  1321     068C  087B               	movf	??_uint8ToString+1,w
  1322     068D  0080               	movwf	0
  1323                           
  1324                           ;Lab3_MAster.c: 189:         str[right] = tempChar;
  1325     068E  0832               	movf	uint8ToString@right,w
  1326     068F  0779               	addwf	uint8ToString@str,w
  1327     0690  00FA               	movwf	??_uint8ToString
  1328     0691  087A               	movf	??_uint8ToString,w
  1329     0692  0084               	movwf	4
  1330     0693  082F               	movf	uint8ToString@tempChar,w
  1331     0694  0080               	movwf	0
  1332     0695                     l1323:
  1333                           
  1334                           ;Lab3_MAster.c: 190:         left++;
  1335     0695  3001               	movlw	1
  1336     0696  00FA               	movwf	??_uint8ToString
  1337     0697  087A               	movf	??_uint8ToString,w
  1338     0698  07B1               	addwf	uint8ToString@left,f
  1339     0699                     l1325:
  1340                           
  1341                           ;Lab3_MAster.c: 191:         right--;
  1342     0699  30FF               	movlw	255
  1343     069A  00FA               	movwf	??_uint8ToString
  1344     069B  087A               	movf	??_uint8ToString,w
  1345     069C  07B2               	addwf	uint8ToString@right,f
  1346     069D                     l1327:
  1347                           
  1348                           ;Lab3_MAster.c: 186:     while (left < right) {
  1349     069D  0831               	movf	uint8ToString@left,w
  1350     069E  3A80               	xorlw	128
  1351     069F  00FA               	movwf	??_uint8ToString
  1352     06A0  0832               	movf	uint8ToString@right,w
  1353     06A1  3A80               	xorlw	128
  1354     06A2  02FA               	subwf	??_uint8ToString,f
  1355     06A3  1C03               	skipc
  1356     06A4  2EA6               	goto	u751
  1357     06A5  2EA7               	goto	u750
  1358     06A6                     u751:
  1359     06A6  2E79               	goto	l1321
  1360     06A7                     u750:
  1361     06A7                     l70:
  1362     06A7  0008               	return
  1363     06A8                     __end_of_uint8ToString:
  1364                           
  1365                           	psect	text2
  1366     04A8                     __ptext2:	
  1367 ;; *************** function ___awmod *****************
  1368 ;; Defined at:
  1369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  divisor         2    0[COMMON] int 
  1372 ;;  dividend        2    2[COMMON] int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  sign            1    6[COMMON] unsigned char 
  1375 ;;  counter         1    5[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    0[COMMON] int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         4       0       0       0       0
  1386 ;;      Locals:         2       0       0       0       0
  1387 ;;      Temps:          1       0       0       0       0
  1388 ;;      Totals:         7       0       0       0       0
  1389 ;;Total ram usage:        7 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_uint8ToString
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398     04A8                     ___awmod:	
  1399                           ;psect for function ___awmod
  1400                           
  1401     04A8                     l1221:	
  1402                           ;incstack = 0
  1403                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1404                           
  1405     04A8  01F6               	clrf	___awmod@sign
  1406     04A9                     l1223:
  1407     04A9  1FF3               	btfss	___awmod@dividend+1,7
  1408     04AA  2CAC               	goto	u641
  1409     04AB  2CAD               	goto	u640
  1410     04AC                     u641:
  1411     04AC  2CB4               	goto	l1229
  1412     04AD                     u640:
  1413     04AD                     l1225:
  1414     04AD  09F2               	comf	___awmod@dividend,f
  1415     04AE  09F3               	comf	___awmod@dividend+1,f
  1416     04AF  0AF2               	incf	___awmod@dividend,f
  1417     04B0  1903               	skipnz
  1418     04B1  0AF3               	incf	___awmod@dividend+1,f
  1419     04B2                     l1227:
  1420     04B2  01F6               	clrf	___awmod@sign
  1421     04B3  0AF6               	incf	___awmod@sign,f
  1422     04B4                     l1229:
  1423     04B4  1FF1               	btfss	___awmod@divisor+1,7
  1424     04B5  2CB7               	goto	u651
  1425     04B6  2CB8               	goto	u650
  1426     04B7                     u651:
  1427     04B7  2CBD               	goto	l1233
  1428     04B8                     u650:
  1429     04B8                     l1231:
  1430     04B8  09F0               	comf	___awmod@divisor,f
  1431     04B9  09F1               	comf	___awmod@divisor+1,f
  1432     04BA  0AF0               	incf	___awmod@divisor,f
  1433     04BB  1903               	skipnz
  1434     04BC  0AF1               	incf	___awmod@divisor+1,f
  1435     04BD                     l1233:
  1436     04BD  0870               	movf	___awmod@divisor,w
  1437     04BE  0471               	iorwf	___awmod@divisor+1,w
  1438     04BF  1903               	btfsc	3,2
  1439     04C0  2CC2               	goto	u661
  1440     04C1  2CC3               	goto	u660
  1441     04C2                     u661:
  1442     04C2  2CF2               	goto	l1251
  1443     04C3                     u660:
  1444     04C3                     l1235:
  1445     04C3  01F5               	clrf	___awmod@counter
  1446     04C4  0AF5               	incf	___awmod@counter,f
  1447     04C5  2CD1               	goto	l1241
  1448     04C6                     l1237:
  1449     04C6  3001               	movlw	1
  1450     04C7                     u675:
  1451     04C7  1003               	clrc
  1452     04C8  0DF0               	rlf	___awmod@divisor,f
  1453     04C9  0DF1               	rlf	___awmod@divisor+1,f
  1454     04CA  3EFF               	addlw	-1
  1455     04CB  1D03               	skipz
  1456     04CC  2CC7               	goto	u675
  1457     04CD                     l1239:
  1458     04CD  3001               	movlw	1
  1459     04CE  00F4               	movwf	??___awmod
  1460     04CF  0874               	movf	??___awmod,w
  1461     04D0  07F5               	addwf	___awmod@counter,f
  1462     04D1                     l1241:
  1463     04D1  1FF1               	btfss	___awmod@divisor+1,7
  1464     04D2  2CD4               	goto	u681
  1465     04D3  2CD5               	goto	u680
  1466     04D4                     u681:
  1467     04D4  2CC6               	goto	l1237
  1468     04D5                     u680:
  1469     04D5                     l1243:
  1470     04D5  0871               	movf	___awmod@divisor+1,w
  1471     04D6  0273               	subwf	___awmod@dividend+1,w
  1472     04D7  1D03               	skipz
  1473     04D8  2CDB               	goto	u695
  1474     04D9  0870               	movf	___awmod@divisor,w
  1475     04DA  0272               	subwf	___awmod@dividend,w
  1476     04DB                     u695:
  1477     04DB  1C03               	skipc
  1478     04DC  2CDE               	goto	u691
  1479     04DD  2CDF               	goto	u690
  1480     04DE                     u691:
  1481     04DE  2CE5               	goto	l1247
  1482     04DF                     u690:
  1483     04DF                     l1245:
  1484     04DF  0870               	movf	___awmod@divisor,w
  1485     04E0  02F2               	subwf	___awmod@dividend,f
  1486     04E1  0871               	movf	___awmod@divisor+1,w
  1487     04E2  1C03               	skipc
  1488     04E3  03F3               	decf	___awmod@dividend+1,f
  1489     04E4  02F3               	subwf	___awmod@dividend+1,f
  1490     04E5                     l1247:
  1491     04E5  3001               	movlw	1
  1492     04E6                     u705:
  1493     04E6  1003               	clrc
  1494     04E7  0CF1               	rrf	___awmod@divisor+1,f
  1495     04E8  0CF0               	rrf	___awmod@divisor,f
  1496     04E9  3EFF               	addlw	-1
  1497     04EA  1D03               	skipz
  1498     04EB  2CE6               	goto	u705
  1499     04EC                     l1249:
  1500     04EC  3001               	movlw	1
  1501     04ED  02F5               	subwf	___awmod@counter,f
  1502     04EE  1D03               	btfss	3,2
  1503     04EF  2CF1               	goto	u711
  1504     04F0  2CF2               	goto	u710
  1505     04F1                     u711:
  1506     04F1  2CD5               	goto	l1243
  1507     04F2                     u710:
  1508     04F2                     l1251:
  1509     04F2  0876               	movf	___awmod@sign,w
  1510     04F3  1903               	btfsc	3,2
  1511     04F4  2CF6               	goto	u721
  1512     04F5  2CF7               	goto	u720
  1513     04F6                     u721:
  1514     04F6  2CFC               	goto	l1255
  1515     04F7                     u720:
  1516     04F7                     l1253:
  1517     04F7  09F2               	comf	___awmod@dividend,f
  1518     04F8  09F3               	comf	___awmod@dividend+1,f
  1519     04F9  0AF2               	incf	___awmod@dividend,f
  1520     04FA  1903               	skipnz
  1521     04FB  0AF3               	incf	___awmod@dividend+1,f
  1522     04FC                     l1255:
  1523     04FC  0873               	movf	___awmod@dividend+1,w
  1524     04FD  00F1               	movwf	?___awmod+1
  1525     04FE  0872               	movf	___awmod@dividend,w
  1526     04FF  00F0               	movwf	?___awmod
  1527     0500                     l417:
  1528     0500  0008               	return
  1529     0501                     __end_of___awmod:
  1530                           
  1531                           	psect	text3
  1532     05BA                     __ptext3:	
  1533 ;; *************** function ___awdiv *****************
  1534 ;; Defined at:
  1535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  divisor         2    0[COMMON] int 
  1538 ;;  dividend        2    2[COMMON] int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  quotient        2    7[COMMON] int 
  1541 ;;  sign            1    6[COMMON] unsigned char 
  1542 ;;  counter         1    5[COMMON] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    0[COMMON] int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         4       0       0       0       0
  1553 ;;      Locals:         4       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0
  1555 ;;      Totals:         9       0       0       0       0
  1556 ;;Total ram usage:        9 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_uint8ToString
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565     05BA                     ___awdiv:	
  1566                           ;psect for function ___awdiv
  1567                           
  1568     05BA                     l1177:	
  1569                           ;incstack = 0
  1570                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1571                           
  1572     05BA  01F6               	clrf	___awdiv@sign
  1573     05BB                     l1179:
  1574     05BB  1FF1               	btfss	___awdiv@divisor+1,7
  1575     05BC  2DBE               	goto	u541
  1576     05BD  2DBF               	goto	u540
  1577     05BE                     u541:
  1578     05BE  2DC6               	goto	l1185
  1579     05BF                     u540:
  1580     05BF                     l1181:
  1581     05BF  09F0               	comf	___awdiv@divisor,f
  1582     05C0  09F1               	comf	___awdiv@divisor+1,f
  1583     05C1  0AF0               	incf	___awdiv@divisor,f
  1584     05C2  1903               	skipnz
  1585     05C3  0AF1               	incf	___awdiv@divisor+1,f
  1586     05C4                     l1183:
  1587     05C4  01F6               	clrf	___awdiv@sign
  1588     05C5  0AF6               	incf	___awdiv@sign,f
  1589     05C6                     l1185:
  1590     05C6  1FF3               	btfss	___awdiv@dividend+1,7
  1591     05C7  2DC9               	goto	u551
  1592     05C8  2DCA               	goto	u550
  1593     05C9                     u551:
  1594     05C9  2DD3               	goto	l1191
  1595     05CA                     u550:
  1596     05CA                     l1187:
  1597     05CA  09F2               	comf	___awdiv@dividend,f
  1598     05CB  09F3               	comf	___awdiv@dividend+1,f
  1599     05CC  0AF2               	incf	___awdiv@dividend,f
  1600     05CD  1903               	skipnz
  1601     05CE  0AF3               	incf	___awdiv@dividend+1,f
  1602     05CF                     l1189:
  1603     05CF  3001               	movlw	1
  1604     05D0  00F4               	movwf	??___awdiv
  1605     05D1  0874               	movf	??___awdiv,w
  1606     05D2  06F6               	xorwf	___awdiv@sign,f
  1607     05D3                     l1191:
  1608     05D3  01F7               	clrf	___awdiv@quotient
  1609     05D4  01F8               	clrf	___awdiv@quotient+1
  1610     05D5                     l1193:
  1611     05D5  0870               	movf	___awdiv@divisor,w
  1612     05D6  0471               	iorwf	___awdiv@divisor+1,w
  1613     05D7  1903               	btfsc	3,2
  1614     05D8  2DDA               	goto	u561
  1615     05D9  2DDB               	goto	u560
  1616     05DA                     u561:
  1617     05DA  2E12               	goto	l1213
  1618     05DB                     u560:
  1619     05DB                     l1195:
  1620     05DB  01F5               	clrf	___awdiv@counter
  1621     05DC  0AF5               	incf	___awdiv@counter,f
  1622     05DD  2DE9               	goto	l1201
  1623     05DE                     l1197:
  1624     05DE  3001               	movlw	1
  1625     05DF                     u575:
  1626     05DF  1003               	clrc
  1627     05E0  0DF0               	rlf	___awdiv@divisor,f
  1628     05E1  0DF1               	rlf	___awdiv@divisor+1,f
  1629     05E2  3EFF               	addlw	-1
  1630     05E3  1D03               	skipz
  1631     05E4  2DDF               	goto	u575
  1632     05E5                     l1199:
  1633     05E5  3001               	movlw	1
  1634     05E6  00F4               	movwf	??___awdiv
  1635     05E7  0874               	movf	??___awdiv,w
  1636     05E8  07F5               	addwf	___awdiv@counter,f
  1637     05E9                     l1201:
  1638     05E9  1FF1               	btfss	___awdiv@divisor+1,7
  1639     05EA  2DEC               	goto	u581
  1640     05EB  2DED               	goto	u580
  1641     05EC                     u581:
  1642     05EC  2DDE               	goto	l1197
  1643     05ED                     u580:
  1644     05ED                     l1203:
  1645     05ED  3001               	movlw	1
  1646     05EE                     u595:
  1647     05EE  1003               	clrc
  1648     05EF  0DF7               	rlf	___awdiv@quotient,f
  1649     05F0  0DF8               	rlf	___awdiv@quotient+1,f
  1650     05F1  3EFF               	addlw	-1
  1651     05F2  1D03               	skipz
  1652     05F3  2DEE               	goto	u595
  1653     05F4  0871               	movf	___awdiv@divisor+1,w
  1654     05F5  0273               	subwf	___awdiv@dividend+1,w
  1655     05F6  1D03               	skipz
  1656     05F7  2DFA               	goto	u605
  1657     05F8  0870               	movf	___awdiv@divisor,w
  1658     05F9  0272               	subwf	___awdiv@dividend,w
  1659     05FA                     u605:
  1660     05FA  1C03               	skipc
  1661     05FB  2DFD               	goto	u601
  1662     05FC  2DFE               	goto	u600
  1663     05FD                     u601:
  1664     05FD  2E05               	goto	l1209
  1665     05FE                     u600:
  1666     05FE                     l1205:
  1667     05FE  0870               	movf	___awdiv@divisor,w
  1668     05FF  02F2               	subwf	___awdiv@dividend,f
  1669     0600  0871               	movf	___awdiv@divisor+1,w
  1670     0601  1C03               	skipc
  1671     0602  03F3               	decf	___awdiv@dividend+1,f
  1672     0603  02F3               	subwf	___awdiv@dividend+1,f
  1673     0604                     l1207:
  1674     0604  1477               	bsf	___awdiv@quotient,0
  1675     0605                     l1209:
  1676     0605  3001               	movlw	1
  1677     0606                     u615:
  1678     0606  1003               	clrc
  1679     0607  0CF1               	rrf	___awdiv@divisor+1,f
  1680     0608  0CF0               	rrf	___awdiv@divisor,f
  1681     0609  3EFF               	addlw	-1
  1682     060A  1D03               	skipz
  1683     060B  2E06               	goto	u615
  1684     060C                     l1211:
  1685     060C  3001               	movlw	1
  1686     060D  02F5               	subwf	___awdiv@counter,f
  1687     060E  1D03               	btfss	3,2
  1688     060F  2E11               	goto	u621
  1689     0610  2E12               	goto	u620
  1690     0611                     u621:
  1691     0611  2DED               	goto	l1203
  1692     0612                     u620:
  1693     0612                     l1213:
  1694     0612  0876               	movf	___awdiv@sign,w
  1695     0613  1903               	btfsc	3,2
  1696     0614  2E16               	goto	u631
  1697     0615  2E17               	goto	u630
  1698     0616                     u631:
  1699     0616  2E1C               	goto	l1217
  1700     0617                     u630:
  1701     0617                     l1215:
  1702     0617  09F7               	comf	___awdiv@quotient,f
  1703     0618  09F8               	comf	___awdiv@quotient+1,f
  1704     0619  0AF7               	incf	___awdiv@quotient,f
  1705     061A  1903               	skipnz
  1706     061B  0AF8               	incf	___awdiv@quotient+1,f
  1707     061C                     l1217:
  1708     061C  0878               	movf	___awdiv@quotient+1,w
  1709     061D  00F1               	movwf	?___awdiv+1
  1710     061E  0877               	movf	___awdiv@quotient,w
  1711     061F  00F0               	movwf	?___awdiv
  1712     0620                     l404:
  1713     0620  0008               	return
  1714     0621                     __end_of___awdiv:
  1715                           
  1716                           	psect	text4
  1717     0376                     __ptext4:	
  1718 ;; *************** function _spiWrite *****************
  1719 ;; Defined at:
  1720 ;;		line 34 in file "../Lab3.X/SPI.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dat             1    wreg     unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  dat             1    0[COMMON] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         1       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         1       0       0       0       0
  1738 ;;Total ram usage:        1 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747     0376                     _spiWrite:	
  1748                           ;psect for function _spiWrite
  1749                           
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _spiWrite: [wreg]
  1753                           ;spiWrite@dat stored from wreg
  1754     0376  00F0               	movwf	spiWrite@dat
  1755     0377                     l1287:
  1756                           
  1757                           ;../Lab3.X/SPI.c: 34: void spiWrite(char dat);../Lab3.X/SPI.c: 35: {;../Lab3.X/SPI.c: 36
      +                          :     SSPBUF = dat;
  1758     0377  0870               	movf	spiWrite@dat,w
  1759     0378  1283               	bcf	3,5	;RP0=0, select bank0
  1760     0379  1303               	bcf	3,6	;RP1=0, select bank0
  1761     037A  0093               	movwf	19	;volatile
  1762     037B                     l102:
  1763     037B  0008               	return
  1764     037C                     __end_of_spiWrite:
  1765                           
  1766                           	psect	text5
  1767     0383                     __ptext5:	
  1768 ;; *************** function _spiRead *****************
  1769 ;; Defined at:
  1770 ;;		line 47 in file "../Lab3.X/SPI.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 1
  1791 ;; This function calls:
  1792 ;;		_spiReceiveWait
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798     0383                     _spiRead:	
  1799                           ;psect for function _spiRead
  1800                           
  1801     0383                     l1289:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1804                           
  1805                           
  1806                           ;../Lab3.X/SPI.c: 49:     spiReceiveWait();
  1807     0383  120A  118A  237C  120A  118A  	fcall	_spiReceiveWait
  1808     0388                     l1291:
  1809                           
  1810                           ;../Lab3.X/SPI.c: 50:     return(SSPBUF);
  1811     0388  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0389  1303               	bcf	3,6	;RP1=0, select bank0
  1813     038A  0813               	movf	19,w	;volatile
  1814     038B                     l110:
  1815     038B  0008               	return
  1816     038C                     __end_of_spiRead:
  1817                           
  1818                           	psect	text6
  1819     037C                     __ptext6:	
  1820 ;; *************** function _spiReceiveWait *****************
  1821 ;; Defined at:
  1822 ;;		line 29 in file "../Lab3.X/SPI.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		None
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_spiRead
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849     037C                     _spiReceiveWait:	
  1850                           ;psect for function _spiReceiveWait
  1851                           
  1852     037C                     l1175:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _spiReceiveWait: []
  1855                           
  1856     037C                     l96:	
  1857                           ;../Lab3.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1858                           
  1859     037C  1683               	bsf	3,5	;RP0=1, select bank1
  1860     037D  1303               	bcf	3,6	;RP1=0, select bank1
  1861     037E  1C14               	btfss	20,0	;volatile
  1862     037F  2B81               	goto	u531
  1863     0380  2B82               	goto	u530
  1864     0381                     u531:
  1865     0381  2B7C               	goto	l96
  1866     0382                     u530:
  1867     0382                     l99:
  1868     0382  0008               	return
  1869     0383                     __end_of_spiReceiveWait:
  1870                           
  1871                           	psect	text7
  1872     0501                     __ptext7:	
  1873 ;; *************** function _setup *****************
  1874 ;; Defined at:
  1875 ;;		line 137 in file "Lab3_MAster.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 3
  1896 ;; This function calls:
  1897 ;;		_Lcd_Clear
  1898 ;;		_Lcd_Init
  1899 ;;		_Lcd_Set_Cursor
  1900 ;;		_Lcd_Write_String
  1901 ;;		_spiInit
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     0501                     _setup:	
  1908                           ;psect for function _setup
  1909                           
  1910     0501                     l1259:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1913                           
  1914                           
  1915                           ;Lab3_MAster.c: 139:     OSCCONbits.IRCF2 = 1;
  1916     0501  1683               	bsf	3,5	;RP0=1, select bank1
  1917     0502  1303               	bcf	3,6	;RP1=0, select bank1
  1918     0503  170F               	bsf	15,6	;volatile
  1919                           
  1920                           ;Lab3_MAster.c: 140:     OSCCONbits.IRCF1 = 1;
  1921     0504  168F               	bsf	15,5	;volatile
  1922                           
  1923                           ;Lab3_MAster.c: 141:     OSCCONbits.IRCF0 = 1;
  1924     0505  160F               	bsf	15,4	;volatile
  1925                           
  1926                           ;Lab3_MAster.c: 142:     OSCCONbits.SCS = 1;
  1927     0506  140F               	bsf	15,0	;volatile
  1928     0507                     l1261:
  1929                           
  1930                           ;Lab3_MAster.c: 143:     ANSEL = 0;
  1931     0507  1683               	bsf	3,5	;RP0=1, select bank3
  1932     0508  1703               	bsf	3,6	;RP1=1, select bank3
  1933     0509  0188               	clrf	8	;volatile
  1934                           
  1935                           ;Lab3_MAster.c: 144:     ANSELH = 0;
  1936     050A  0189               	clrf	9	;volatile
  1937     050B                     l1263:
  1938                           
  1939                           ;Lab3_MAster.c: 145:     TRISC2 = 0;
  1940     050B  1683               	bsf	3,5	;RP0=1, select bank1
  1941     050C  1303               	bcf	3,6	;RP1=0, select bank1
  1942     050D  1107               	bcf	7,2	;volatile
  1943     050E                     l1265:
  1944                           
  1945                           ;Lab3_MAster.c: 146:     TRISC1 = 0;
  1946     050E  1087               	bcf	7,1	;volatile
  1947                           
  1948                           ;Lab3_MAster.c: 147:     TRISB = 0;
  1949     050F  0186               	clrf	6	;volatile
  1950                           
  1951                           ;Lab3_MAster.c: 148:     TRISD = 0;
  1952     0510  0188               	clrf	8	;volatile
  1953                           
  1954                           ;Lab3_MAster.c: 149:     PORTB = 0;
  1955     0511  1283               	bcf	3,5	;RP0=0, select bank0
  1956     0512  1303               	bcf	3,6	;RP1=0, select bank0
  1957     0513  0186               	clrf	6	;volatile
  1958                           
  1959                           ;Lab3_MAster.c: 150:     PORTD = 0;
  1960     0514  0188               	clrf	8	;volatile
  1961     0515                     l1267:
  1962                           
  1963                           ;Lab3_MAster.c: 151:     PORTCbits.RC2 = 1;
  1964     0515  1507               	bsf	7,2	;volatile
  1965     0516                     l1269:
  1966                           
  1967                           ;Lab3_MAster.c: 152:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1968     0516  01F0               	clrf	spiInit@sDataSample
  1969     0517  01F1               	clrf	spiInit@sClockIdle
  1970     0518  01F2               	clrf	spiInit@sTransmitEdge
  1971     0519  3020               	movlw	32
  1972     051A  120A  118A  2399  120A  118A  	fcall	_spiInit
  1973     051F                     l1271:
  1974                           
  1975                           ;Lab3_MAster.c: 153:     Lcd_Init();
  1976     051F  120A  118A  255D  120A  118A  	fcall	_Lcd_Init
  1977     0524                     l1273:
  1978                           
  1979                           ;Lab3_MAster.c: 154:     Lcd_Clear();
  1980     0524  120A  118A  238C  120A  118A  	fcall	_Lcd_Clear
  1981     0529                     l1275:
  1982                           
  1983                           ;Lab3_MAster.c: 155:     Lcd_Set_Cursor(1,1);
  1984     0529  01F4               	clrf	Lcd_Set_Cursor@b
  1985     052A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1986     052B  3001               	movlw	1
  1987     052C  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  1988     0531                     l1277:
  1989                           
  1990                           ;Lab3_MAster.c: 156:     Lcd_Write_String("S1:");
  1991     0531  3005               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1992     0532  00F5               	movwf	Lcd_Write_String@a
  1993     0533  3080               	movlw	128
  1994     0534  00F6               	movwf	Lcd_Write_String@a+1
  1995     0535  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  1996     053A                     l1279:
  1997                           
  1998                           ;Lab3_MAster.c: 157:     Lcd_Set_Cursor(1,8);
  1999     053A  3008               	movlw	8
  2000     053B  00F4               	movwf	Lcd_Set_Cursor@b
  2001     053C  3001               	movlw	1
  2002     053D  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  2003     0542                     l1281:
  2004                           
  2005                           ;Lab3_MAster.c: 158:     Lcd_Write_String("S2:");
  2006     0542  3009               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2007     0543  00F5               	movwf	Lcd_Write_String@a
  2008     0544  3080               	movlw	128
  2009     0545  00F6               	movwf	Lcd_Write_String@a+1
  2010     0546  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  2011     054B                     l1283:
  2012                           
  2013                           ;Lab3_MAster.c: 159:     Lcd_Set_Cursor(1,14);
  2014     054B  300E               	movlw	14
  2015     054C  00F4               	movwf	Lcd_Set_Cursor@b
  2016     054D  3001               	movlw	1
  2017     054E  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
  2018     0553                     l1285:
  2019                           
  2020                           ;Lab3_MAster.c: 160:     Lcd_Write_String("S3:");
  2021     0553  300D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2022     0554  00F5               	movwf	Lcd_Write_String@a
  2023     0555  3080               	movlw	128
  2024     0556  00F6               	movwf	Lcd_Write_String@a+1
  2025     0557  120A  118A  2420  120A  118A  	fcall	_Lcd_Write_String
  2026     055C                     l66:
  2027     055C  0008               	return
  2028     055D                     __end_of_setup:
  2029                           
  2030                           	psect	text8
  2031     0399                     __ptext8:	
  2032 ;; *************** function _spiInit *****************
  2033 ;; Defined at:
  2034 ;;		line 12 in file "../Lab3.X/SPI.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  sType           1    wreg     enum E1292
  2037 ;;  sDataSample     1    0[COMMON] enum E1300
  2038 ;;  sClockIdle      1    1[COMMON] enum E1304
  2039 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  sType           1    3[COMMON] enum E1292
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         3       0       0       0       0
  2052 ;;      Locals:         1       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0
  2054 ;;      Totals:         4       0       0       0       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_setup
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064     0399                     _spiInit:	
  2065                           ;psect for function _spiInit
  2066                           
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2070                           ;spiInit@sType stored from wreg
  2071     0399  00F3               	movwf	spiInit@sType
  2072     039A                     l1153:
  2073                           
  2074                           ;../Lab3.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Cloc
      +                          k_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../Lab3.X/SPI.c: 13: {;../Lab3.X/SPI
      +                          .c: 14:     TRISC5 = 0;
  2075     039A  1683               	bsf	3,5	;RP0=1, select bank1
  2076     039B  1303               	bcf	3,6	;RP1=0, select bank1
  2077     039C  1287               	bcf	7,5	;volatile
  2078                           
  2079                           ;../Lab3.X/SPI.c: 15:     if(sType & 0b00000100)
  2080     039D  1D73               	btfss	spiInit@sType,2
  2081     039E  2BA0               	goto	u521
  2082     039F  2BA1               	goto	u520
  2083     03A0                     u521:
  2084     03A0  2BA5               	goto	l1159
  2085     03A1                     u520:
  2086     03A1                     l1155:
  2087                           
  2088                           ;../Lab3.X/SPI.c: 16:     {;../Lab3.X/SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2089     03A1  0872               	movf	spiInit@sTransmitEdge,w
  2090     03A2  0094               	movwf	20	;volatile
  2091     03A3                     l1157:
  2092                           
  2093                           ;../Lab3.X/SPI.c: 18:         TRISC3 = 1;
  2094     03A3  1587               	bsf	7,3	;volatile
  2095                           
  2096                           ;../Lab3.X/SPI.c: 19:     }
  2097     03A4  2BA9               	goto	l92
  2098     03A5                     l1159:
  2099                           
  2100                           ;../Lab3.X/SPI.c: 21:     {;../Lab3.X/SPI.c: 22:         SSPSTAT = sDataSample | sTransm
      +                          itEdge;
  2101     03A5  0870               	movf	spiInit@sDataSample,w
  2102     03A6  0472               	iorwf	spiInit@sTransmitEdge,w
  2103     03A7  0094               	movwf	20	;volatile
  2104     03A8                     l1161:
  2105                           
  2106                           ;../Lab3.X/SPI.c: 23:         TRISC3 = 0;
  2107     03A8  1187               	bcf	7,3	;volatile
  2108     03A9                     l92:	
  2109                           ;../Lab3.X/SPI.c: 24:     }
  2110                           
  2111                           
  2112                           ;../Lab3.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
  2113     03A9  0873               	movf	spiInit@sType,w
  2114     03AA  0471               	iorwf	spiInit@sClockIdle,w
  2115     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2116     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2117     03AD  0094               	movwf	20	;volatile
  2118     03AE                     l93:
  2119     03AE  0008               	return
  2120     03AF                     __end_of_spiInit:
  2121                           
  2122                           	psect	text9
  2123     0420                     __ptext9:	
  2124 ;; *************** function _Lcd_Write_String *****************
  2125 ;; Defined at:
  2126 ;;		line 98 in file "LCD.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  a               2    5[COMMON] PTR unsigned char 
  2129 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  2130 ;;		 -> buffer3(4), STR_2(4), buffer2(4), STR_1(4), 
  2131 ;;		 -> buffer(4), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  i               2   10[COMMON] int 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         2       0       0       0       0
  2144 ;;      Locals:         2       0       0       0       0
  2145 ;;      Temps:          3       0       0       0       0
  2146 ;;      Totals:         7       0       0       0       0
  2147 ;;Total ram usage:        7 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 2
  2150 ;; This function calls:
  2151 ;;		_Lcd_Write_Char
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;;		_setup
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158     0420                     _Lcd_Write_String:	
  2159                           ;psect for function _Lcd_Write_String
  2160                           
  2161     0420                     l1145:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2164                           
  2165                           
  2166                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2167     0420  01FA               	clrf	Lcd_Write_String@i
  2168     0421  01FB               	clrf	Lcd_Write_String@i+1
  2169     0422  2C45               	goto	l1151
  2170     0423                     l1147:
  2171                           
  2172                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2173     0423  087A               	movf	Lcd_Write_String@i,w
  2174     0424  0775               	addwf	Lcd_Write_String@a,w
  2175     0425  00F8               	movwf	??_Lcd_Write_String+1
  2176     0426  0876               	movf	Lcd_Write_String@a+1,w
  2177     0427  00F7               	movwf	??_Lcd_Write_String
  2178     0428  1803               	skipnc
  2179     0429  0AF7               	incf	??_Lcd_Write_String,f
  2180     042A  1FFA               	btfss	Lcd_Write_String@i,7
  2181     042B  2C2D               	goto	u490
  2182     042C  03F7               	decf	??_Lcd_Write_String,f
  2183     042D                     u490:
  2184     042D  0877               	movf	??_Lcd_Write_String,w
  2185     042E  00F9               	movwf	??_Lcd_Write_String+2
  2186     042F  0879               	movf	??_Lcd_Write_String+2,w
  2187     0430  1283               	bcf	3,5	;RP0=0, select bank0
  2188     0431  1303               	bcf	3,6	;RP1=0, select bank0
  2189     0432  00FF               	movwf	btemp+1
  2190     0433  0878               	movf	??_Lcd_Write_String+1,w
  2191     0434  0084               	movwf	4
  2192     0435  120A  118A  2003  120A  118A  	fcall	stringtab
  2193     043A  120A  118A  23EB  120A  118A  	fcall	_Lcd_Write_Char
  2194     043F                     l1149:
  2195     043F  3001               	movlw	1
  2196     0440  07FA               	addwf	Lcd_Write_String@i,f
  2197     0441  1803               	skipnc
  2198     0442  0AFB               	incf	Lcd_Write_String@i+1,f
  2199     0443  3000               	movlw	0
  2200     0444  07FB               	addwf	Lcd_Write_String@i+1,f
  2201     0445                     l1151:
  2202     0445  087A               	movf	Lcd_Write_String@i,w
  2203     0446  0775               	addwf	Lcd_Write_String@a,w
  2204     0447  00F8               	movwf	??_Lcd_Write_String+1
  2205     0448  0876               	movf	Lcd_Write_String@a+1,w
  2206     0449  00F7               	movwf	??_Lcd_Write_String
  2207     044A  1803               	skipnc
  2208     044B  0AF7               	incf	??_Lcd_Write_String,f
  2209     044C  1FFA               	btfss	Lcd_Write_String@i,7
  2210     044D  2C4F               	goto	u500
  2211     044E  03F7               	decf	??_Lcd_Write_String,f
  2212     044F                     u500:
  2213     044F  0877               	movf	??_Lcd_Write_String,w
  2214     0450  00F9               	movwf	??_Lcd_Write_String+2
  2215     0451  0879               	movf	??_Lcd_Write_String+2,w
  2216     0452  1283               	bcf	3,5	;RP0=0, select bank0
  2217     0453  1303               	bcf	3,6	;RP1=0, select bank0
  2218     0454  00FF               	movwf	btemp+1
  2219     0455  0878               	movf	??_Lcd_Write_String+1,w
  2220     0456  0084               	movwf	4
  2221     0457  120A  118A  2003  120A  118A  	fcall	stringtab
  2222     045C  3A00               	xorlw	0
  2223     045D  1D03               	skipz
  2224     045E  2C60               	goto	u511
  2225     045F  2C61               	goto	u510
  2226     0460                     u511:
  2227     0460  2C23               	goto	l1147
  2228     0461                     u510:
  2229     0461                     l159:
  2230     0461  0008               	return
  2231     0462                     __end_of_Lcd_Write_String:
  2232                           
  2233                           	psect	text10
  2234     03EB                     __ptext10:	
  2235 ;; *************** function _Lcd_Write_Char *****************
  2236 ;; Defined at:
  2237 ;;		line 83 in file "LCD.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  a               1    wreg     unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  a               1    4[COMMON] unsigned char 
  2242 ;;  y               1    3[COMMON] unsigned char 
  2243 ;;  temp            1    2[COMMON] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         3       0       0       0       0
  2255 ;;      Temps:          1       0       0       0       0
  2256 ;;      Totals:         4       0       0       0       0
  2257 ;;Total ram usage:        4 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 1
  2260 ;; This function calls:
  2261 ;;		_Lcd_Port
  2262 ;; This function is called by:
  2263 ;;		_Lcd_Write_String
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     03EB                     _Lcd_Write_Char:	
  2268                           ;psect for function _Lcd_Write_Char
  2269                           
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2273                           ;Lcd_Write_Char@a stored from wreg
  2274     03EB  00F4               	movwf	Lcd_Write_Char@a
  2275     03EC                     l1105:
  2276                           
  2277                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2278     03EC  0874               	movf	Lcd_Write_Char@a,w
  2279     03ED  390F               	andlw	15
  2280     03EE  00F2               	movwf	Lcd_Write_Char@temp
  2281                           
  2282                           ;LCD.c: 86:     y = a & 0xF0;
  2283     03EF  0874               	movf	Lcd_Write_Char@a,w
  2284     03F0  39F0               	andlw	240
  2285     03F1  00F3               	movwf	Lcd_Write_Char@y
  2286     03F2                     l1107:
  2287                           
  2288                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2289     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2290     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2291     03F4  1508               	bsf	8,2	;volatile
  2292     03F5                     l1109:
  2293                           
  2294                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2295     03F5  0873               	movf	Lcd_Write_Char@y,w
  2296     03F6  00F1               	movwf	??_Lcd_Write_Char
  2297     03F7  3004               	movlw	4
  2298     03F8                     u445:
  2299     03F8  1003               	clrc
  2300     03F9  0CF1               	rrf	??_Lcd_Write_Char,f
  2301     03FA  3EFF               	addlw	-1
  2302     03FB  1D03               	skipz
  2303     03FC  2BF8               	goto	u445
  2304     03FD  0871               	movf	??_Lcd_Write_Char,w
  2305     03FE  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2306     0403                     l1111:
  2307                           
  2308                           ;LCD.c: 89:     RD3 = 1;
  2309     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2310     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2311     0405  1588               	bsf	8,3	;volatile
  2312     0406                     l1113:
  2313                           
  2314                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2315     0406  301A               	movlw	26
  2316     0407  00F1               	movwf	??_Lcd_Write_Char
  2317     0408                     u887:
  2318     0408  0BF1               	decfsz	??_Lcd_Write_Char,f
  2319     0409  2C08               	goto	u887
  2320     040A  0000               	nop
  2321     040B                     l1115:
  2322                           
  2323                           ;LCD.c: 91:     RD3 = 0;
  2324     040B  1283               	bcf	3,5	;RP0=0, select bank0
  2325     040C  1303               	bcf	3,6	;RP1=0, select bank0
  2326     040D  1188               	bcf	8,3	;volatile
  2327     040E                     l1117:
  2328                           
  2329                           ;LCD.c: 92:     Lcd_Port(temp);
  2330     040E  0872               	movf	Lcd_Write_Char@temp,w
  2331     040F  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2332     0414                     l1119:
  2333                           
  2334                           ;LCD.c: 93:     RD3 = 1;
  2335     0414  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0415  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0416  1588               	bsf	8,3	;volatile
  2338     0417                     l1121:
  2339                           
  2340                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2341     0417  301A               	movlw	26
  2342     0418  00F1               	movwf	??_Lcd_Write_Char
  2343     0419                     u897:
  2344     0419  0BF1               	decfsz	??_Lcd_Write_Char,f
  2345     041A  2C19               	goto	u897
  2346     041B  0000               	nop
  2347     041C                     l1123:
  2348                           
  2349                           ;LCD.c: 95:     RD3 = 0;
  2350     041C  1283               	bcf	3,5	;RP0=0, select bank0
  2351     041D  1303               	bcf	3,6	;RP1=0, select bank0
  2352     041E  1188               	bcf	8,3	;volatile
  2353     041F                     l153:
  2354     041F  0008               	return
  2355     0420                     __end_of_Lcd_Write_Char:
  2356                           
  2357                           	psect	text11
  2358     0462                     __ptext11:	
  2359 ;; *************** function _Lcd_Set_Cursor *****************
  2360 ;; Defined at:
  2361 ;;		line 48 in file "LCD.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  a               1    wreg     unsigned char 
  2364 ;;  b               1    4[COMMON] unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  a               1    6[COMMON] unsigned char 
  2367 ;;  temp            1    9[COMMON] unsigned char 
  2368 ;;  y               1    8[COMMON] unsigned char 
  2369 ;;  z               1    7[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         1       0       0       0       0
  2380 ;;      Locals:         4       0       0       0       0
  2381 ;;      Temps:          1       0       0       0       0
  2382 ;;      Totals:         6       0       0       0       0
  2383 ;;Total ram usage:        6 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 2
  2386 ;; This function calls:
  2387 ;;		_Lcd_Cmd
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;;		_setup
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394     0462                     _Lcd_Set_Cursor:	
  2395                           ;psect for function _Lcd_Set_Cursor
  2396                           
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2400                           ;Lcd_Set_Cursor@a stored from wreg
  2401     0462  00F6               	movwf	Lcd_Set_Cursor@a
  2402     0463                     l1125:
  2403                           
  2404                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2405     0463  0376               	decf	Lcd_Set_Cursor@a,w
  2406     0464  1D03               	btfss	3,2
  2407     0465  2C67               	goto	u451
  2408     0466  2C68               	goto	u450
  2409     0467                     u451:
  2410     0467  2C85               	goto	l1135
  2411     0468                     u450:
  2412     0468                     l1127:
  2413                           
  2414                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2415     0468  0874               	movf	Lcd_Set_Cursor@b,w
  2416     0469  3E7F               	addlw	127
  2417     046A  00F9               	movwf	Lcd_Set_Cursor@temp
  2418                           
  2419                           ;LCD.c: 52:         z = temp >> 4;
  2420     046B  0879               	movf	Lcd_Set_Cursor@temp,w
  2421     046C  00F5               	movwf	??_Lcd_Set_Cursor
  2422     046D  3004               	movlw	4
  2423     046E                     u465:
  2424     046E  1003               	clrc
  2425     046F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2426     0470  3EFF               	addlw	-1
  2427     0471  1D03               	skipz
  2428     0472  2C6E               	goto	u465
  2429     0473  0875               	movf	??_Lcd_Set_Cursor,w
  2430     0474  00F7               	movwf	Lcd_Set_Cursor@z
  2431     0475                     l1129:
  2432                           
  2433                           ;LCD.c: 53:         y = temp & 0x0F;
  2434     0475  0879               	movf	Lcd_Set_Cursor@temp,w
  2435     0476  390F               	andlw	15
  2436     0477  00F8               	movwf	Lcd_Set_Cursor@y
  2437     0478                     l1131:
  2438                           
  2439                           ;LCD.c: 54:         Lcd_Cmd(z);
  2440     0478  0877               	movf	Lcd_Set_Cursor@z,w
  2441     0479  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2442     047E                     l1133:
  2443                           
  2444                           ;LCD.c: 55:         Lcd_Cmd(y);
  2445     047E  0878               	movf	Lcd_Set_Cursor@y,w
  2446     047F  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2447                           
  2448                           ;LCD.c: 56:     } else if (a == 2) {
  2449     0484  2CA7               	goto	l147
  2450     0485                     l1135:
  2451     0485  3002               	movlw	2
  2452     0486  0676               	xorwf	Lcd_Set_Cursor@a,w
  2453     0487  1D03               	btfss	3,2
  2454     0488  2C8A               	goto	u471
  2455     0489  2C8B               	goto	u470
  2456     048A                     u471:
  2457     048A  2CA7               	goto	l147
  2458     048B                     u470:
  2459     048B                     l1137:
  2460                           
  2461                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2462     048B  0874               	movf	Lcd_Set_Cursor@b,w
  2463     048C  3EBF               	addlw	191
  2464     048D  00F9               	movwf	Lcd_Set_Cursor@temp
  2465                           
  2466                           ;LCD.c: 58:         z = temp >> 4;
  2467     048E  0879               	movf	Lcd_Set_Cursor@temp,w
  2468     048F  00F5               	movwf	??_Lcd_Set_Cursor
  2469     0490  3004               	movlw	4
  2470     0491                     u485:
  2471     0491  1003               	clrc
  2472     0492  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2473     0493  3EFF               	addlw	-1
  2474     0494  1D03               	skipz
  2475     0495  2C91               	goto	u485
  2476     0496  0875               	movf	??_Lcd_Set_Cursor,w
  2477     0497  00F7               	movwf	Lcd_Set_Cursor@z
  2478     0498                     l1139:
  2479                           
  2480                           ;LCD.c: 59:         y = temp & 0x0F;
  2481     0498  0879               	movf	Lcd_Set_Cursor@temp,w
  2482     0499  390F               	andlw	15
  2483     049A  00F8               	movwf	Lcd_Set_Cursor@y
  2484     049B                     l1141:
  2485                           
  2486                           ;LCD.c: 60:         Lcd_Cmd(z);
  2487     049B  0877               	movf	Lcd_Set_Cursor@z,w
  2488     049C  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2489     04A1                     l1143:
  2490                           
  2491                           ;LCD.c: 61:         Lcd_Cmd(y);
  2492     04A1  0878               	movf	Lcd_Set_Cursor@y,w
  2493     04A2  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2494     04A7                     l147:
  2495     04A7  0008               	return
  2496     04A8                     __end_of_Lcd_Set_Cursor:
  2497                           
  2498                           	psect	text12
  2499     055D                     __ptext12:	
  2500 ;; *************** function _Lcd_Init *****************
  2501 ;; Defined at:
  2502 ;;		line 65 in file "LCD.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0
  2518 ;;      Temps:          2       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 2
  2523 ;; This function calls:
  2524 ;;		_Lcd_Cmd
  2525 ;;		_Lcd_Port
  2526 ;; This function is called by:
  2527 ;;		_setup
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     055D                     _Lcd_Init:	
  2532                           ;psect for function _Lcd_Init
  2533                           
  2534     055D                     l1163:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2537                           
  2538                           
  2539                           ;LCD.c: 66:     Lcd_Port(0x00);
  2540     055D  3000               	movlw	0
  2541     055E  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2542     0563                     l1165:
  2543                           
  2544                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2545     0563  3034               	movlw	52
  2546     0564  00F5               	movwf	??_Lcd_Init+1
  2547     0565  30F1               	movlw	241
  2548     0566  00F4               	movwf	??_Lcd_Init
  2549     0567                     u907:
  2550     0567  0BF4               	decfsz	??_Lcd_Init,f
  2551     0568  2D67               	goto	u907
  2552     0569  0BF5               	decfsz	??_Lcd_Init+1,f
  2553     056A  2D67               	goto	u907
  2554     056B  2D6C               	nop2
  2555     056C                     l1167:
  2556                           
  2557                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2558     056C  3003               	movlw	3
  2559     056D  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2560                           
  2561                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2562     0572  300D               	movlw	13
  2563     0573  00F5               	movwf	??_Lcd_Init+1
  2564     0574  30FB               	movlw	251
  2565     0575  00F4               	movwf	??_Lcd_Init
  2566     0576                     u917:
  2567     0576  0BF4               	decfsz	??_Lcd_Init,f
  2568     0577  2D76               	goto	u917
  2569     0578  0BF5               	decfsz	??_Lcd_Init+1,f
  2570     0579  2D76               	goto	u917
  2571     057A  2D7B               	nop2
  2572     057B                     l1169:
  2573                           
  2574                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2575     057B  3003               	movlw	3
  2576     057C  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2577     0581                     l1171:
  2578                           
  2579                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2580     0581  301D               	movlw	29
  2581     0582  00F5               	movwf	??_Lcd_Init+1
  2582     0583  3091               	movlw	145
  2583     0584  00F4               	movwf	??_Lcd_Init
  2584     0585                     u927:
  2585     0585  0BF4               	decfsz	??_Lcd_Init,f
  2586     0586  2D85               	goto	u927
  2587     0587  0BF5               	decfsz	??_Lcd_Init+1,f
  2588     0588  2D85               	goto	u927
  2589                           
  2590                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2591     0589  3003               	movlw	3
  2592     058A  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2593                           
  2594                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2595     058F  3002               	movlw	2
  2596     0590  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2597                           
  2598                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2599     0595  3002               	movlw	2
  2600     0596  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2601                           
  2602                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2603     059B  3008               	movlw	8
  2604     059C  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2605                           
  2606                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2607     05A1  3000               	movlw	0
  2608     05A2  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2609                           
  2610                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2611     05A7  300C               	movlw	12
  2612     05A8  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2613                           
  2614                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2615     05AD  3000               	movlw	0
  2616     05AE  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2617                           
  2618                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2619     05B3  3006               	movlw	6
  2620     05B4  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2621     05B9                     l150:
  2622     05B9  0008               	return
  2623     05BA                     __end_of_Lcd_Init:
  2624                           
  2625                           	psect	text13
  2626     038C                     __ptext13:	
  2627 ;; *************** function _Lcd_Clear *****************
  2628 ;; Defined at:
  2629 ;;		line 43 in file "LCD.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		_Lcd_Cmd
  2652 ;; This function is called by:
  2653 ;;		_setup
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657     038C                     _Lcd_Clear:	
  2658                           ;psect for function _Lcd_Clear
  2659                           
  2660     038C                     l1173:	
  2661                           ;incstack = 0
  2662                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2663                           
  2664                           
  2665                           ;LCD.c: 44:     Lcd_Cmd(0);
  2666     038C  3000               	movlw	0
  2667     038D  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2668                           
  2669                           ;LCD.c: 45:     Lcd_Cmd(1);
  2670     0392  3001               	movlw	1
  2671     0393  120A  118A  23AF  120A  118A  	fcall	_Lcd_Cmd
  2672     0398                     l141:
  2673     0398  0008               	return
  2674     0399                     __end_of_Lcd_Clear:
  2675                           
  2676                           	psect	text14
  2677     03AF                     __ptext14:	
  2678 ;; *************** function _Lcd_Cmd *****************
  2679 ;; Defined at:
  2680 ;;		line 35 in file "LCD.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  a               1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  a               1    3[COMMON] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         1       0       0       0       0
  2696 ;;      Temps:          2       0       0       0       0
  2697 ;;      Totals:         3       0       0       0       0
  2698 ;;Total ram usage:        3 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 1
  2701 ;; This function calls:
  2702 ;;		_Lcd_Port
  2703 ;; This function is called by:
  2704 ;;		_Lcd_Clear
  2705 ;;		_Lcd_Set_Cursor
  2706 ;;		_Lcd_Init
  2707 ;;		_Lcd_Shift_Right
  2708 ;;		_Lcd_Shift_Left
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     03AF                     _Lcd_Cmd:	
  2713                           ;psect for function _Lcd_Cmd
  2714                           
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2718                           ;Lcd_Cmd@a stored from wreg
  2719     03AF  00F3               	movwf	Lcd_Cmd@a
  2720     03B0                     l1095:
  2721                           
  2722                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2723     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2724     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2725     03B2  1108               	bcf	8,2	;volatile
  2726     03B3                     l1097:
  2727                           
  2728                           ;LCD.c: 37:     Lcd_Port(a);
  2729     03B3  0873               	movf	Lcd_Cmd@a,w
  2730     03B4  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2731     03B9                     l1099:
  2732                           
  2733                           ;LCD.c: 38:     RD3 = 1;
  2734     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2735     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2736     03BB  1588               	bsf	8,3	;volatile
  2737     03BC                     l1101:
  2738                           
  2739                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2740     03BC  300B               	movlw	11
  2741     03BD  00F2               	movwf	??_Lcd_Cmd+1
  2742     03BE  3062               	movlw	98
  2743     03BF  00F1               	movwf	??_Lcd_Cmd
  2744     03C0                     u937:
  2745     03C0  0BF1               	decfsz	??_Lcd_Cmd,f
  2746     03C1  2BC0               	goto	u937
  2747     03C2  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2748     03C3  2BC0               	goto	u937
  2749     03C4  0000               	nop
  2750     03C5                     l1103:
  2751                           
  2752                           ;LCD.c: 40:     RD3 = 0;
  2753     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2754     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2755     03C7  1188               	bcf	8,3	;volatile
  2756     03C8                     l138:
  2757     03C8  0008               	return
  2758     03C9                     __end_of_Lcd_Cmd:
  2759                           
  2760                           	psect	text15
  2761     03C9                     __ptext15:	
  2762 ;; *************** function _Lcd_Port *****************
  2763 ;; Defined at:
  2764 ;;		line 13 in file "LCD.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  a               1    wreg     unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  a               1    0[COMMON] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0
  2781 ;;      Totals:         1       0       0       0       0
  2782 ;;Total ram usage:        1 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_Lcd_Cmd
  2788 ;;		_Lcd_Init
  2789 ;;		_Lcd_Write_Char
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     03C9                     _Lcd_Port:	
  2794                           ;psect for function _Lcd_Port
  2795                           
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _Lcd_Port: [wreg]
  2799                           ;Lcd_Port@a stored from wreg
  2800     03C9  00F0               	movwf	Lcd_Port@a
  2801     03CA                     l1085:
  2802                           
  2803                           ;LCD.c: 14:     if (a & 1)
  2804     03CA  1C70               	btfss	Lcd_Port@a,0
  2805     03CB  2BCD               	goto	u401
  2806     03CC  2BCE               	goto	u400
  2807     03CD                     u401:
  2808     03CD  2BD2               	goto	l127
  2809     03CE                     u400:
  2810     03CE                     l1087:
  2811                           
  2812                           ;LCD.c: 15:         RD4 = 1;
  2813     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2814     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2815     03D0  1608               	bsf	8,4	;volatile
  2816     03D1  2BD5               	goto	l128
  2817     03D2                     l127:	
  2818                           ;LCD.c: 16:     else
  2819                           
  2820                           
  2821                           ;LCD.c: 17:         RD4 = 0;
  2822     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2823     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2824     03D4  1208               	bcf	8,4	;volatile
  2825     03D5                     l128:
  2826                           
  2827                           ;LCD.c: 19:     if (a & 2)
  2828     03D5  1CF0               	btfss	Lcd_Port@a,1
  2829     03D6  2BD8               	goto	u411
  2830     03D7  2BD9               	goto	u410
  2831     03D8                     u411:
  2832     03D8  2BDB               	goto	l129
  2833     03D9                     u410:
  2834     03D9                     l1089:
  2835                           
  2836                           ;LCD.c: 20:         RD5 = 1;
  2837     03D9  1688               	bsf	8,5	;volatile
  2838     03DA  2BDC               	goto	l130
  2839     03DB                     l129:	
  2840                           ;LCD.c: 21:     else
  2841                           
  2842                           
  2843                           ;LCD.c: 22:         RD5 = 0;
  2844     03DB  1288               	bcf	8,5	;volatile
  2845     03DC                     l130:
  2846                           
  2847                           ;LCD.c: 24:     if (a & 4)
  2848     03DC  1D70               	btfss	Lcd_Port@a,2
  2849     03DD  2BDF               	goto	u421
  2850     03DE  2BE0               	goto	u420
  2851     03DF                     u421:
  2852     03DF  2BE2               	goto	l131
  2853     03E0                     u420:
  2854     03E0                     l1091:
  2855                           
  2856                           ;LCD.c: 25:         RD6 = 1;
  2857     03E0  1708               	bsf	8,6	;volatile
  2858     03E1  2BE3               	goto	l132
  2859     03E2                     l131:	
  2860                           ;LCD.c: 26:     else
  2861                           
  2862                           
  2863                           ;LCD.c: 27:         RD6 = 0;
  2864     03E2  1308               	bcf	8,6	;volatile
  2865     03E3                     l132:
  2866                           
  2867                           ;LCD.c: 29:     if (a & 8)
  2868     03E3  1DF0               	btfss	Lcd_Port@a,3
  2869     03E4  2BE6               	goto	u431
  2870     03E5  2BE7               	goto	u430
  2871     03E6                     u431:
  2872     03E6  2BE9               	goto	l133
  2873     03E7                     u430:
  2874     03E7                     l1093:
  2875                           
  2876                           ;LCD.c: 30:         RD7 = 1;
  2877     03E7  1788               	bsf	8,7	;volatile
  2878     03E8  2BEA               	goto	l135
  2879     03E9                     l133:	
  2880                           ;LCD.c: 31:     else
  2881                           
  2882                           
  2883                           ;LCD.c: 32:         RD7 = 0;
  2884     03E9  1388               	bcf	8,7	;volatile
  2885     03EA                     l135:
  2886     03EA  0008               	return
  2887     03EB                     __end_of_Lcd_Port:
  2888     007E                     btemp	set	126	;btemp
  2889     007E                     wtemp0	set	126
  2890                           
  2891                           	psect	idloc
  2892                           
  2893                           ;Config register IDLOC0 @ 0x2000
  2894                           ;	unspecified, using default values
  2895     2000                     	org	8192
  2896     2000  3FFF               	dw	16383
  2897                           
  2898                           ;Config register IDLOC1 @ 0x2001
  2899                           ;	unspecified, using default values
  2900     2001                     	org	8193
  2901     2001  3FFF               	dw	16383
  2902                           
  2903                           ;Config register IDLOC2 @ 0x2002
  2904                           ;	unspecified, using default values
  2905     2002                     	org	8194
  2906     2002  3FFF               	dw	16383
  2907                           
  2908                           ;Config register IDLOC3 @ 0x2003
  2909                           ;	unspecified, using default values
  2910     2003                     	org	8195
  2911     2003  3FFF               	dw	16383
  2912                           
  2913                           	psect	config
  2914                           
  2915                           ;Config register CONFIG1 @ 0x2007
  2916                           ;	Oscillator Selection bits
  2917                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2918                           ;	Watchdog Timer Enable bit
  2919                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2920                           ;	Power-up Timer Enable bit
  2921                           ;	PWRTE = OFF, PWRT disabled
  2922                           ;	RE3/MCLR pin function select bit
  2923                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2924                           ;	Code Protection bit
  2925                           ;	CP = OFF, Program memory code protection is disabled
  2926                           ;	Data Code Protection bit
  2927                           ;	CPD = OFF, Data memory code protection is disabled
  2928                           ;	Brown Out Reset Selection bits
  2929                           ;	BOREN = OFF, BOR disabled
  2930                           ;	Internal External Switchover bit
  2931                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2932                           ;	Fail-Safe Clock Monitor Enabled bit
  2933                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2934                           ;	Low Voltage Programming Enable bit
  2935                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2936                           ;	In-Circuit Debugger Mode bit
  2937                           ;	DEBUG = 0x1, unprogramme  2938     2007                     	org	8199
  2939     2007  20D4               	dw	8404
  2940                           
  2941                           ;Config register CONFIG2 @ 0x2008
  2942                           ;	Brown-out Reset Selection bit
  2943                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2944                           ;	Flash Program Memory Self Write Enable bits
  2945                           ;	WRT = OFF, Write protection off
  2946     2008                     	org	8200
  2947     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      9      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> buffer3(BANK0[4]), STR_2(CODE[4]), buffer2(BANK0[4]), STR_1(CODE[4]), 
		 -> buffer(BANK0[4]), 

    uint8ToString@str	PTR unsigned char  size(1) Largest target is 4
		 -> buffer3(BANK0[4]), buffer2(BANK0[4]), buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_uint8ToString
    _uint8ToString->___awdiv
    _setup->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_uint8ToString

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6365
                                              6 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                      _uint8ToString
 ---------------------------------------------------------------------------------
 (1) _uint8ToString                                       10     9      1    1643
                                              9 COMMON     4     3      1
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2684
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     952
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1064
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _uint8ToString
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      17       5       28.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 04 20:43:38 2023

                       pc 0002           ??_uint8ToString 007A               _SSPSTATbits 0094  
                      l70 06A7                        l66 055C                        l92 03A9  
                      l93 03AE                        l96 037C                        l99 0382  
            ___awdiv@sign 0076                        fsr 0004                       l110 038B  
                     l102 037B                       l130 03DC                       l131 03E2  
                     l132 03E3                       l133 03E9                       l141 0398  
                     l150 05B9                       l135 03EA                       l127 03D2  
                     l128 03D5                       l129 03DB                       l153 041F  
                     l138 03C8                       l147 04A7                       l404 0620  
                     l159 0461                       l417 0500                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       u400 03CE                       u401 03CD  
                     u410 03D9                       u411 03D8                       u420 03E0  
                     u500 044F                       u421 03DF                       u430 03E7  
                     u510 0461                       u431 03E6                       u511 0460  
                     u520 03A1                       u600 05FE                       u521 03A0  
                     u601 05FD                       u450 0468                       u530 0382  
                     u451 0467                       u531 0381                       u620 0612  
                     u540 05BF                       u445 03F8                       u621 0611  
                     u605 05FA                       u541 05BE                       u470 048B  
                     u630 0617                       u550 05CA                       u710 04F2  
                     u471 048A                       u631 0616                       u615 0606  
                     u551 05C9                       u711 04F1                       u560 05DB  
                     u720 04F7                       u640 04AD                       u465 046E  
                     u561 05DA                       u721 04F6                       u705 04E6  
                     u641 04AC                       u490 042D                       u650 04B8  
                     u730 062C                       u651 04B7                       u731 062B  
                     u580 05ED                       u660 04C3                       u740 066D  
                     u485 0491                       u581 05EC                       u661 04C2  
                     u741 066C                       u750 06A7                       u575 05DF  
                     u751 06A6                       u807 06CC                       u680 04D5  
                     u760 075D                       u681 04D4                       u761 075C  
                     u817 06DB                       u690 04DF                       u770 0791  
                     u907 0567                       u595 05EE                       u691 04DE  
                     u675 04C7                       u771 0790                       u827 06EA  
                     u780 07C5                       u917 0576                       u781 07C4  
                     u837 0704                       u927 0585                       u695 04DB  
                     u847 0713                       u937 03C0                       u857 0722  
                     u867 073A                       u877 0749                       u797 06B6  
                     u887 0408                       u897 0419                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076                      l1101 03BC  
                    l1103 03C5                      l1111 0403                      l1121 0417  
                    l1113 0406                      l1105 03EC                      l1201 05E9  
                    l1131 0478                      l1123 041C                      l1115 040B  
                    l1107 03F2                      l1211 060C                      l1203 05ED  
                    l1141 049B                      l1133 047E                      l1125 0463  
                    l1117 040E                      l1109 03F5                      l1205 05FE  
                    l1213 0612                      l1221 04A8                      l1301 062C  
                    l1143 04A1                      l1127 0468                      l1135 0485  
                    l1119 0414                      l1151 0445                      l1215 0617  
                    l1207 0604                      l1231 04B8                      l1223 04A9  
                    l1311 0654                      l1303 0631                      l1137 048B  
                    l1129 0475                      l1145 0420                      l1161 03A8  
                    l1153 039A                      l1217 061C                      l1209 0605  
                    l1241 04D1                      l1233 04BD                      l1225 04AD  
                    l1321 0679                      l1313 0668                      l1401 07D6  
                    l1091 03E0                      l1171 0581                      l1163 055D  
                    l1139 0498                      l1147 0423                      l1155 03A1  
                    l1243 04D5                      l1235 04C3                      l1251 04F2  
                    l1227 04B2                      l1323 0695                      l1315 066D  
                    l1307 0635                      l1331 06AD                      l1093 03E7  
                    l1085 03CA                      l1173 038C                      l1165 0563  
                    l1149 043F                      l1157 03A3                      l1261 0507  
                    l1181 05BF                      l1253 04F7                      l1245 04DF  
                    l1237 04C6                      l1229 04B4                      l1325 0699  
                    l1317 0674                      l1309 064E                      l1341 06D0  
                    l1333 06B0                      l1087 03CE                      l1095 03B0  
                    l1167 056C                      l1159 03A5                      l1271 051F  
                    l1263 050B                      l1175 037C                      l1191 05D3  
                    l1183 05C4                      l1255 04FC                      l1247 04E5  
                    l1239 04CD                      l1327 069D                      l1319 0675  
                    l1351 06F6                      l1343 06D3                      l1335 06BA  
                    l1089 03D9                      l1097 03B3                      l1169 057B  
                    l1281 0542                      l1273 0524                      l1265 050E  
                    l1193 05D5                      l1185 05C6                      l1177 05BA  
                    l1249 04EC                      l1361 071C                      l1353 06FE  
                    l1345 06E1                      l1337 06C0                      l1329 06A8  
                    l1099 03B9                      l1283 054B                      l1275 0529  
                    l1267 0515                      l1259 0501                      l1291 0388  
                    l1195 05DB                      l1187 05CA                      l1179 05BB  
                    l1371 0741                      l1363 0726                      l1355 0708  
                    l1347 06E4                      l1339 06C6                      l1285 0553  
                    l1277 0531                      l1269 0516                      l1197 05DE  
                    l1189 05CF                      l1381 076E                      l1373 074F  
                    l1365 072C                      l1357 070B                      l1349 06EE  
                    l1279 053A                      l1287 0377                      l1199 05E5  
                    l1295 0624                      l1391 07A2                      l1383 077F  
                    l1375 0757                      l1367 0734                      l1359 0719  
                    l1289 0383                      l1297 0626                      l1393 07B3  
                    l1385 0789                      l1377 075D                      l1369 073E  
                    l1299 0627                      l1395 07BD                      l1387 0791  
                    l1379 0765                      l1397 07C5                      l1389 0799  
                    l1399 07CD                      STR_1 0013                      STR_2 0013  
                    STR_3 0013                      STR_4 0017                      STR_5 001B  
                    STR_6 001F         ?_Lcd_Write_String 0075                      _main 06A8  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 03C9                     ?_main 0070           __end_of___awdiv 0621  
         __end_of___awmod 0501                     _ANSEL 0188           ___awdiv@divisor 0070  
         ___awdiv@counter 0075                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _setup 0501  
                   pclath 000A           __end_of_spiInit 03AF           __end_of_spiRead 038C  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 05BA  
        __end_of_Lcd_Port 03EB           __initialization 07EB              __end_of_main 07EB  
                  ??_main 0034          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC1 0439  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013        uint8ToString@right 0032  
               ??___awdiv 0074                 ??___awmod 0074                    _buffer 002A  
        ___awdiv@quotient 0077           ___awmod@divisor 0070                    _slave1 007D  
                  _slave2 0020           ___awmod@counter 0075          __end_of_spiWrite 037C  
               ??_spiInit 0073                 ??_spiRead 0070           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0399            __pcstackCOMMON 0070  
           __end_of_setup 055D            _Lcd_Set_Cursor 0462          uint8ToString@num 002E  
        uint8ToString@str 0079                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 007C                __pbssBANK0 0020                __pmaintext 06A8  
  __end_of_Lcd_Set_Cursor 04A8     __end_of_uint8ToString 06A8                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 03EB                   _Lcd_Cmd 03AF                 ?_spiWrite 0070  
                 ___awdiv 05BA                   ___awmod 04A8           ?_Lcd_Set_Cursor 0074  
                 __ptext1 0621                   __ptext2 04A8                   __ptext3 05BA  
                 __ptext4 0376                   __ptext5 0383                   __ptext6 037C  
                 __ptext7 0501                   __ptext8 0399                   __ptext9 0420  
                 _buffer2 0026                   _buffer3 0022          ___awmod@dividend 0072  
                 _spiInit 0399                   _spiRead 0383    __end_of_Lcd_Write_Char 0420  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTDbits 0008               spiWrite@dat 0070  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
               _Lcd_Clear 038C            _spiReceiveWait 037C          _Lcd_Write_String 0420  
     start_initialization 07EB         uint8ToString@left 0031         uint8ToString@temp 0033  
  __end_of_spiReceiveWait 0383                ?_Lcd_Clear 0070     uint8ToString@tempChar 002F  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073               __pbssCOMMON 007D  
               ___latbits 0002             __pcstackBANK0 002E                  ?_Lcd_Cmd 0070  
         ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070  
                ?___awmod 0070                 __pstrings 0003                  ?_spiInit 0070  
                ?_spiRead 0070      spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 0012  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 055D                  _Lcd_Port 03C9  
__end_of_Lcd_Write_String 0462        __end_of__stringtab 0013             _uint8ToString 0621  
          uint8ToString@i 0030                  __ptext10 03EB                  __ptext11 0462  
                __ptext12 055D                  __ptext13 038C                  __ptext14 03AF  
                __ptext15 03C9                  _spiWrite 0376              spiInit@sType 0073  
       spiInit@sClockIdle 0071            ?_uint8ToString 0079        Lcd_Write_Char@temp 0072  
        ??_spiReceiveWait 0070               _slave1_cont 0021                 stringcode 000D  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079                  stringdir 000D  
                stringtab 0003  
